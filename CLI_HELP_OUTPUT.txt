# QONTINUI DEVTOOLS CLI HELP OUTPUT
# Complete reference of all CLI commands and their help text

================================================================================
MAIN COMMAND
================================================================================

$ qontinui-devtools --help

Usage: python -m qontinui_devtools.cli [OPTIONS] COMMAND [ARGS]...

  Qontinui DevTools - Analysis and debugging tools for Qontinui.

  A comprehensive suite of tools for analyzing imports, detecting race
  conditions, profiling performance, and testing Qontinui applications.

  Examples:

      # Check for circular dependencies
      qontinui-devtools import check ./src

      # Analyze race conditions
      qontinui-devtools concurrency check ./src

      # Run comprehensive analysis
      qontinui-devtools analyze ./src --report report.html

Options:
  --version  Show the version and exit.
  --help     Show this message and exit.

Commands:
  analyze      Run comprehensive analysis on codebase.
  concurrency  Concurrency analysis commands.
  hal          Mock HAL commands.
  import-cmd   Import analysis commands.
  profile      Performance profiling commands.
  test         Testing commands.


================================================================================
IMPORT ANALYSIS COMMANDS
================================================================================

$ qontinui-devtools import-cmd --help

Usage: python -m qontinui_devtools.cli import-cmd [OPTIONS] COMMAND [ARGS]...

  Import analysis commands.

  Tools for analyzing Python imports, detecting circular dependencies, and
  visualizing import graphs.

Options:
  --help  Show this message and exit.

Commands:
  check  Check for circular dependencies in Python code.
  graph  Generate visual dependency graph.
  trace  Trace imports from a module at runtime.


--------------------------------------------------------------------------------

$ qontinui-devtools import-cmd check --help

Usage: python -m qontinui_devtools.cli import-cmd check [OPTIONS] PATH

  Check for circular dependencies in Python code.

  Analyzes Python files to detect circular import dependencies that can cause
  import errors and make code harder to maintain.

  Examples:

      # Basic check
      qontinui-devtools import check ./src

      # Strict mode (exit with error if issues found)
      qontinui-devtools import check ./src --strict

      # Save report to file
      qontinui-devtools import check ./src --output report.json --format json

Options:
  --strict                   Exit with error code if issues found
  --output PATH              Save report to file
  --format [text|json|html]  Output format
  --help                     Show this message and exit.


--------------------------------------------------------------------------------

$ qontinui-devtools import-cmd trace --help

Usage: python -m qontinui_devtools.cli import-cmd trace [OPTIONS] MODULE

  Trace imports from a module at runtime.

  Uses import hooks to trace all imports when a module is loaded, useful for
  understanding complex import chains and detecting issues.

  Examples:

      # Trace imports
      qontinui-devtools import trace mypackage.mymodule

      # Trace and visualize
      qontinui-devtools import trace mypackage.mymodule --visualize

      # Limit depth and exclude patterns
      qontinui-devtools import trace mypackage --depth 3 --exclude "test_*"

Options:
  --visualize          Generate visual graph
  --output TEXT        Output file for graph
  --depth INTEGER      Maximum depth to trace
  --exclude TEXT       Patterns to exclude from trace
  --help               Show this message and exit.


--------------------------------------------------------------------------------

$ qontinui-devtools import-cmd graph --help

Usage: python -m qontinui_devtools.cli import-cmd graph [OPTIONS] PATH

  Generate visual dependency graph.

  Creates a visual representation of import dependencies in your codebase,
  making it easier to understand architecture and identify problem areas.

  Examples:

      # Generate PNG graph
      qontinui-devtools import graph ./src

      # Generate SVG with custom output
      qontinui-devtools import graph ./src --output deps.svg --format svg

Options:
  --output TEXT           Output file
  --format [png|svg|pdf]  Output format
  --clusters / --no-clusters
                          Group by package
  --help                  Show this message and exit.


================================================================================
CONCURRENCY ANALYSIS COMMANDS
================================================================================

$ qontinui-devtools concurrency --help

Usage: python -m qontinui_devtools.cli concurrency [OPTIONS] COMMAND [ARGS]...

  Concurrency analysis commands.

  Tools for detecting race conditions, deadlocks, and other concurrency issues
  in multi-threaded code.

Options:
  --help  Show this message and exit.

Commands:
  check     Check for race conditions and concurrency issues.
  deadlock  Detect potential deadlocks.


--------------------------------------------------------------------------------

$ qontinui-devtools concurrency check --help

Usage: python -m qontinui_devtools.cli concurrency check [OPTIONS] PATH

  Check for race conditions and concurrency issues.

  Performs static analysis to detect potential race conditions, missing locks,
  and other thread-safety issues in your code.

  Examples:

      # Basic check
      qontinui-devtools concurrency check ./src

      # Only show critical issues
      qontinui-devtools concurrency check ./src --severity critical

      # Detailed output
      qontinui-devtools concurrency check ./src --detailed

Options:
  --severity [low|medium|high|critical]
                                  Minimum severity to report
  --output PATH                   Save report to file
  --detailed                      Show detailed analysis
  --help                          Show this message and exit.


--------------------------------------------------------------------------------

$ qontinui-devtools concurrency deadlock --help

Usage: python -m qontinui_devtools.cli concurrency deadlock [OPTIONS] PATH

  Detect potential deadlocks.

  Analyzes lock acquisition patterns to find potential deadlock scenarios
  where threads might wait for each other indefinitely.

  Examples:

      # Check for deadlocks
      qontinui-devtools concurrency deadlock ./src

      # Visualize lock dependencies
      qontinui-devtools concurrency deadlock ./src --visualize

Options:
  --visualize  Generate lock dependency graph
  --help       Show this message and exit.


================================================================================
TESTING COMMANDS
================================================================================

$ qontinui-devtools test --help

Usage: python -m qontinui_devtools.cli test [OPTIONS] COMMAND [ARGS]...

  Testing commands.

  Tools for stress testing, race condition testing, and other dynamic analysis
  techniques.

Options:
  --help  Show this message and exit.

Commands:
  race    Run race condition stress test.
  stress  Run stress test on code.


--------------------------------------------------------------------------------

$ qontinui-devtools test race --help

Usage: python -m qontinui_devtools.cli test race [OPTIONS]

  Run race condition stress test.

  Executes a function concurrently from multiple threads to detect race
  conditions that might not appear in normal testing.

  Examples:

      # Test a function
      qontinui-devtools test race --target mymodule:my_function

      # Heavy stress test
      qontinui-devtools test race --target mymodule:my_function --threads 50
      --iterations 1000

Options:
  --threads INTEGER     Number of concurrent threads
  --iterations INTEGER  Iterations per thread
  --target TEXT         Target function (module:function)  [required]
  --timeout INTEGER     Timeout in seconds
  --help                Show this message and exit.


--------------------------------------------------------------------------------

$ qontinui-devtools test stress --help

Usage: python -m qontinui_devtools.cli test stress [OPTIONS] PATH

  Run stress test on code.

  Performs sustained load testing to identify performance degradation, memory
  leaks, and stability issues under stress.

  Examples:

      # 1-minute stress test
      qontinui-devtools test stress ./tests/test_suite.py

      # 10-minute test with 8 workers
      qontinui-devtools test stress ./tests --duration 600 --workers 8

Options:
  --duration INTEGER  Test duration in seconds
  --workers INTEGER   Number of worker processes
  --help              Show this message and exit.


================================================================================
COMPREHENSIVE ANALYSIS
================================================================================

$ qontinui-devtools analyze --help

Usage: python -m qontinui_devtools.cli analyze [OPTIONS] PATH

  Run comprehensive analysis on codebase.

  Performs multiple static analysis checks including import analysis,
  concurrency checks, and code complexity metrics.

  Examples:

      # Full analysis
      qontinui-devtools analyze ./src

      # Generate HTML report
      qontinui-devtools analyze ./src --report report.html --format html

      # Run specific checks
      qontinui-devtools analyze ./src --checks imports --checks concurrency

Options:
  --report PATH                   Generate HTML report
  --format [text|json|html]       Output format
  --checks [imports|concurrency|complexity|all]
                                  Checks to run
  --help                          Show this message and exit.


================================================================================
PERFORMANCE PROFILING COMMANDS
================================================================================

$ qontinui-devtools profile --help

Usage: python -m qontinui_devtools.cli profile [OPTIONS] COMMAND [ARGS]...

  Performance profiling commands.

  Tools for profiling CPU usage, memory consumption, and identifying
  performance bottlenecks.

Options:
  --help  Show this message and exit.

Commands:
  cpu     Profile CPU usage of a running process or script.
  memory  Profile memory usage and detect leaks.


--------------------------------------------------------------------------------

$ qontinui-devtools profile cpu --help

Usage: python -m qontinui_devtools.cli profile cpu [OPTIONS] TARGET

  Profile CPU usage of a running process or script.

  Examples:

      # Profile a Python script
      qontinui-devtools profile cpu script.py --duration 30

      # Profile running process
      qontinui-devtools profile cpu --target pid:1234

Options:
  --duration INTEGER  Profile duration in seconds
  --output TEXT       Output file
  --help              Show this message and exit.


--------------------------------------------------------------------------------

$ qontinui-devtools profile memory --help

Usage: python -m qontinui_devtools.cli profile memory [OPTIONS] TARGET

  Profile memory usage and detect leaks.

  Examples:

      # Profile memory usage
      qontinui-devtools profile memory script.py

Options:
  --output TEXT  Output file
  --help         Show this message and exit.


================================================================================
MOCK HAL COMMANDS
================================================================================

$ qontinui-devtools hal --help

Usage: python -m qontinui_devtools.cli hal [OPTIONS] COMMAND [ARGS]...

  Mock HAL commands.

  Commands for working with the mock hardware abstraction layer for testing
  without physical hardware.

Options:
  --help  Show this message and exit.

Commands:
  init    Initialize mock HAL environment.
  record  Record HAL interactions for replay.
  replay  Replay recorded HAL interactions.


--------------------------------------------------------------------------------

$ qontinui-devtools hal init --help

Usage: python -m qontinui_devtools.cli hal init [OPTIONS]

  Initialize mock HAL environment.

  Examples:

      # Initialize with default config
      qontinui-devtools hal init

      # Initialize with custom config
      qontinui-devtools hal init --config hal_config.yaml

Options:
  --config PATH  Configuration file
  --help         Show this message and exit.


--------------------------------------------------------------------------------

$ qontinui-devtools hal record --help

Usage: python -m qontinui_devtools.cli hal record [OPTIONS] OUTPUT

  Record HAL interactions for replay.

  Examples:

      # Record 60 seconds of interactions
      qontinui-devtools hal record session.hal

      # Record for 5 minutes
      qontinui-devtools hal record session.hal --duration 300

Options:
  --duration INTEGER  Recording duration in seconds
  --help              Show this message and exit.


--------------------------------------------------------------------------------

$ qontinui-devtools hal replay --help

Usage: python -m qontinui_devtools.cli hal replay [OPTIONS] INPUT

  Replay recorded HAL interactions.

  Examples:

      # Replay at normal speed
      qontinui-devtools hal replay session.hal

      # Replay at 2x speed
      qontinui-devtools hal replay session.hal --speed 2.0

Options:
  --speed FLOAT  Playback speed multiplier
  --help         Show this message and exit.


================================================================================
VERSION
================================================================================

$ qontinui-devtools --version

python -m qontinui_devtools.cli, version 0.1.0


================================================================================
END OF CLI HELP OUTPUT
================================================================================
