================================================================================
RACE CONDITION DETECTION REPORT
================================================================================

SUMMARY
--------------------------------------------------------------------------------
Total Issues: 598
  Critical: 471
  High:     127
  Medium:   0
  Low:      0

DETAILED FINDINGS
--------------------------------------------------------------------------------

1. [CRITICAL] _initialized
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation_api.py:28

   Description:
     Module-level bool '_initialized'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 146: write
     - Line 155: write
     - Line 171: read
     - Line 220: read
     - Line 344: read

   Suggestion:
     Add lock protection around all accesses to '_initialized'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

2. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:39

   Description:
     Shared bool 'success' in class 'ActionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 95: write
     - Line 230: read

   Suggestion:
     Add lock protection around all accesses to 'success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

3. [CRITICAL] match_list
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:45

   Description:
     Shared list 'match_list' in class 'ActionResult'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 97: write
     - Line 120: read
     - Line 134: read
     - Line 239: read
     - Line 249: read

   Suggestion:
     Add lock protection around all accesses to 'match_list'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

4. [CRITICAL] text
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:54

   Description:
     Shared Optional 'text' in class 'ActionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 100: write
     - Line 144: read
     - Line 147: write
     - Line 150: read
     - Line 150: read
     - Line 151: read

   Suggestion:
     Protect check-then-act pattern on 'text' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

5. [CRITICAL] active_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:60

   Description:
     Shared set 'active_states' in class 'ActionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 102: write
     - Line 125: read

   Suggestion:
     Add lock protection around all accesses to 'active_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

6. [CRITICAL] defined_regions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:72

   Description:
     Shared list 'defined_regions' in class 'ActionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 106: write
     - Line 159: read

   Suggestion:
     Add lock protection around all accesses to 'defined_regions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

7. [CRITICAL] movements
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:75

   Description:
     Shared list 'movements' in class 'ActionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 107: write
     - Line 167: read

   Suggestion:
     Add lock protection around all accesses to 'movements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

8. [CRITICAL] execution_history
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:78

   Description:
     Shared list 'execution_history' in class 'ActionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 108: write
     - Line 175: read

   Suggestion:
     Add lock protection around all accesses to 'execution_history'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

9. [CRITICAL] times_acted_on
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:81

   Description:
     Shared int 'times_acted_on' in class 'ActionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 109: write
     - Line 133: write

   Suggestion:
     Add lock protection around all accesses to 'times_acted_on'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

10. [CRITICAL] actions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/fluent.py:14

   Description:
     Shared list 'actions' in class 'ActionChain'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 31: read
     - Line 43: read
     - Line 58: write

   Suggestion:
     Add lock protection around all accesses to 'actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

11. [CRITICAL] results
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/fluent.py:17

   Description:
     Shared list 'results' in class 'ActionChain'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 41: write
     - Line 45: read
     - Line 50: read
     - Line 59: write
     - Line 70: read
     - Line 79: read
     - Line 79: read
     - Line 79: read

   Suggestion:
     Add lock protection around all accesses to 'results'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

12. [CRITICAL] timestamp
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/pure.py:18

   Description:
     Shared float 'timestamp' in class 'ActionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (2):
     - Line 21: read
     - Line 22: write

   Suggestion:
     Protect check-then-act pattern on 'timestamp' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

13. [CRITICAL] times_to_repeat_individual_action
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/repetition_options.py:19

   Description:
     Shared int 'times_to_repeat_individual_action' in class 'RepetitionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 44: write
     - Line 44: read
     - Line 51: read
     - Line 62: write
     - Line 68: write
     - Line 88: read

   Suggestion:
     Add lock protection around all accesses to 'times_to_repeat_individual_action'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

14. [CRITICAL] pause_between_individual_actions
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/repetition_options.py:22

   Description:
     Shared float 'pause_between_individual_actions' in class 'RepetitionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 45: write
     - Line 45: read
     - Line 55: read
     - Line 63: write
     - Line 73: write
     - Line 89: read

   Suggestion:
     Add lock protection around all accesses to 'pause_between_individual_actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

15. [CRITICAL] max_repetitions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/repetition_options.py:25

   Description:
     Shared int 'max_repetitions' in class 'RepetitionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 46: write
     - Line 46: read
     - Line 64: write
     - Line 78: write
     - Line 90: read

   Suggestion:
     Add lock protection around all accesses to 'max_repetitions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

16. [CRITICAL] event
   Type: Event
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/verification_options.py:42

   Description:
     Shared Event 'event' in class 'VerificationOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 70: write
     - Line 70: read
     - Line 81: write
     - Line 88: write
     - Line 113: read

   Suggestion:
     Add lock protection around all accesses to 'event'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

17. [CRITICAL] text
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/verification_options.py:45

   Description:
     Shared str 'text' in class 'VerificationOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 71: write
     - Line 71: read
     - Line 82: write
     - Line 93: write
     - Line 114: read

   Suggestion:
     Add lock protection around all accesses to 'text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

18. [CRITICAL] images
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/verification_options.py:48

   Description:
     Shared unknown 'images' in class 'VerificationOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 72: write
     - Line 72: read
     - Line 72: read
     - Line 83: write
     - Line 98: write
     - Line 115: read
     - Line 115: read

   Suggestion:
     Add lock protection around all accesses to 'images'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

19. [CRITICAL] timeout
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/verification_options.py:51

   Description:
     Shared float 'timeout' in class 'VerificationOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 73: write
     - Line 73: read
     - Line 84: write
     - Line 103: write
     - Line 116: read

   Suggestion:
     Add lock protection around all accesses to 'timeout'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

20. [CRITICAL] states
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/annotations/state_registry.py:45

   Description:
     Shared dict 'states' in class 'StateRegistry'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 12 total

   Suggestion:
     Protect check-then-act pattern on 'states' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

21. [CRITICAL] transitions
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/annotations/state_registry.py:48

   Description:
     Shared dict 'transitions' in class 'StateRegistry'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (8):
     - Line 188: read
     - Line 193: write
     - Line 193: write
     - Line 193: read
     - Line 303: read
     - Line 370: read
     - Line 385: read
     - Line 395: read

   Suggestion:
     Protect check-then-act pattern on 'transitions' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

22. [CRITICAL] groups
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/annotations/state_registry.py:51

   Description:
     Shared dict 'groups' in class 'StateRegistry'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (9):
     - Line 146: read
     - Line 147: write
     - Line 147: write
     - Line 147: read
     - Line 148: read
     - Line 148: read
     - Line 342: read
     - Line 386: read
     - Line 396: read

   Suggestion:
     Protect check-then-act pattern on 'groups' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

23. [CRITICAL] profiles
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/annotations/state_registry.py:54

   Description:
     Shared dict 'profiles' in class 'StateRegistry'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 20 total

   Suggestion:
     Protect check-then-act pattern on 'profiles' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

24. [CRITICAL] state_ids
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/annotations/state_registry.py:57

   Description:
     Shared dict 'state_ids' in class 'StateRegistry'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 14 total

   Suggestion:
     Add lock protection around all accesses to 'state_ids'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

25. [CRITICAL] next_state_id
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/annotations/state_registry.py:58

   Description:
     Shared int 'next_state_id' in class 'StateRegistry'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 140: read
     - Line 142: read_write
     - Line 399: write

   Suggestion:
     Protect check-then-act pattern on 'next_state_id' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

26. [CRITICAL] active_profile
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/annotations/state_registry.py:64

   Description:
     Shared str 'active_profile' in class 'StateRegistry'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 314: read
     - Line 358: write
     - Line 388: read
     - Line 411: read

   Suggestion:
     Add lock protection around all accesses to 'active_profile'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

27. [CRITICAL] app
   Type: create_app
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/execution_api.py:118

   Description:
     Module-level create_app 'app'. has 8 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 19 total

   Suggestion:
     Protect check-then-act pattern on 'app' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

28. [CRITICAL] options
   Type: ExecutionOptions
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/execution_manager.py:108

   Description:
     Shared ExecutionOptions 'options' in class 'ExecutionContext'. has 1 unprotected write and 1 unprotected reads (read-write race). Locks available but not used: ['pause_event', '_anonymous', 'cancel_event', '_anonymous', 'step_event', '_anonymous'].

   Access Locations (2):
     - Line 147: read
     - Line 221: write

   Suggestion:
     Add lock protection around all accesses to 'options'. Multiple threads are writing to this state simultaneously. Use existing lock (pause_event) or create a dedicated lock for 'options'.

--------------------------------------------------------------------------------

29. [CRITICAL] lifecycle_enabled
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/aspect_registry.py:22

   Description:
     Shared bool 'lifecycle_enabled' in class 'AspectConfiguration'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 185: write
     - Line 194: write

   Suggestion:
     Add lock protection around all accesses to 'lifecycle_enabled'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

30. [CRITICAL] performance_enabled
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/aspect_registry.py:30

   Description:
     Shared bool 'performance_enabled' in class 'AspectConfiguration'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 186: write
     - Line 195: write

   Suggestion:
     Add lock protection around all accesses to 'performance_enabled'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

31. [CRITICAL] state_transition_enabled
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/aspect_registry.py:37

   Description:
     Shared bool 'state_transition_enabled' in class 'AspectConfiguration'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 187: write
     - Line 196: write

   Suggestion:
     Add lock protection around all accesses to 'state_transition_enabled'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

32. [CRITICAL] recovery_enabled
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/aspect_registry.py:42

   Description:
     Shared bool 'recovery_enabled' in class 'AspectConfiguration'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 188: write
     - Line 197: write

   Suggestion:
     Add lock protection around all accesses to 'recovery_enabled'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

33. [CRITICAL] provider
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/capture/unified_capture_service.py:41

   Description:
     Shared str 'provider' in class 'CaptureConfig'. has 10 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 22 total

   Suggestion:
     Add lock protection around all accesses to 'provider'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

34. [CRITICAL] fallback_providers
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/capture/unified_capture_service.py:49

   Description:
     Shared unknown 'fallback_providers' in class 'CaptureConfig'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 53: read
     - Line 54: write
     - Line 210: read

   Suggestion:
     Protect check-then-act pattern on 'fallback_providers' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

35. [CRITICAL] _action_defaults
   Type: ActionDefaults
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/action_defaults.py:190

   Description:
     Module-level ActionDefaults '_action_defaults'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 199: read
     - Line 209: write

   Suggestion:
     Add lock protection around all accesses to '_action_defaults'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

36. [CRITICAL] _instance
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/configuration_manager.py:47

   Description:
     Shared Optional '_instance' in class 'ConfigurationManager'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (8):
     - Line 51: read
     - Line 52: write
     - Line 53: write
     - Line 53: read
     - Line 54: read
     - Line 77: read
     - Line 78: write
     - Line 79: read

   Suggestion:
     Protect check-then-act pattern on '_instance' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

37. [CRITICAL] _instance
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/framework_settings.py:116

   Description:
     Shared Optional '_instance' in class 'FrameworkSettings'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (9):
     - Line 120: read
     - Line 121: write
     - Line 122: write
     - Line 122: read
     - Line 123: read
     - Line 165: read
     - Line 166: write
     - Line 167: read
     - Line 172: write

   Suggestion:
     Protect check-then-act pattern on '_instance' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

38. [CRITICAL] load_time_ms
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/diagnostics/image_loader.py:26

   Description:
     Shared unknown 'load_time_ms' in class 'LoadResult'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 64: write
     - Line 134: read
     - Line 135: read
     - Line 161: read
     - Line 161: read

   Suggestion:
     Add lock protection around all accesses to 'load_time_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

39. [CRITICAL] path
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/diagnostics/image_validator.py:21

   Description:
     Shared str 'path' in class 'ValidationResult'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 88: write
     - Line 90: read
     - Line 93: read

   Suggestion:
     Add lock protection around all accesses to 'path'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

40. [CRITICAL] screenshots
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/discovery/pixel_stability_matrix_analyzer.py:29

   Description:
     Shared set 'screenshots' in class 'PixelPattern'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (6):
     - Line 75: read
     - Line 75: read
     - Line 114: read
     - Line 114: read
     - Line 191: write
     - Line 277: read

   Suggestion:
     Add lock protection around all accesses to 'screenshots'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

41. [CRITICAL] reference_value
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/discovery/pixel_stability_matrix_analyzer.py:30

   Description:
     Shared unknown 'reference_value' in class 'PixelPattern'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 134: write
     - Line 141: write

   Suggestion:
     Add lock protection around all accesses to 'reference_value'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

42. [CRITICAL] name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/dsl/parser.py:157

   Description:
     Shared str 'name' in class 'ParsedState'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 210: write
     - Line 311: write
     - Line 395: write
     - Line 401: write
     - Line 523: read

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

43. [CRITICAL] elements
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/dsl/parser.py:158

   Description:
     Shared list 'elements' in class 'ParsedState'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 192: write
     - Line 204: read
     - Line 397: write
     - Line 397: write
     - Line 397: read

   Suggestion:
     Add lock protection around all accesses to 'elements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

44. [CRITICAL] name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/dsl/parser.py:168

   Description:
     Shared str 'name' in class 'ParsedTransition'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 210: write
     - Line 311: write
     - Line 395: write
     - Line 401: write
     - Line 523: read

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

45. [CRITICAL] action
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/dsl/parser.py:171

   Description:
     Shared str 'action' in class 'ParsedTransition'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 374: write
     - Line 537: read
     - Line 547: read
     - Line 548: read

   Suggestion:
     Add lock protection around all accesses to 'action'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

46. [CRITICAL] action_type
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/dsl/parser.py:181

   Description:
     Shared str 'action_type' in class 'ParsedAction'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 368: write
     - Line 548: read

   Suggestion:
     Add lock protection around all accesses to 'action_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

47. [CRITICAL] status
   Type: ActionStatus
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/execution_types.py:40

   Description:
     Shared ActionStatus 'status' in class 'ActionExecutionRecord'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 62: write
     - Line 76: write
     - Line 88: write

   Suggestion:
     Add lock protection around all accesses to 'status'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

48. [CRITICAL] end_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/execution_types.py:42

   Description:
     Shared unknown 'end_time' in class 'ActionExecutionRecord'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 60: write
     - Line 61: read
     - Line 74: write
     - Line 75: read
     - Line 86: write

   Suggestion:
     Add lock protection around all accesses to 'end_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

49. [CRITICAL] duration_ms
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/execution_types.py:43

   Description:
     Shared unknown 'duration_ms' in class 'ActionExecutionRecord'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 61: write
     - Line 75: write
     - Line 87: write

   Suggestion:
     Add lock protection around all accesses to 'duration_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

50. [CRITICAL] error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/execution_types.py:45

   Description:
     Shared unknown 'error' in class 'ActionExecutionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 77: write
     - Line 89: write

   Suggestion:
     Add lock protection around all accesses to 'error'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

51. [CRITICAL] context
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/merge_context.py:22

   Description:
     Shared dict 'context' in class 'InputRecord'. has 1 unprotected write and 4 unprotected reads (read-write race). Locks available but not used: ['_lock', '_anonymous', '_ready_event', '_anonymous'].

   Access Locations (5):
     - Line 168: read
     - Line 243: write
     - Line 243: read
     - Line 245: read
     - Line 266: read

   Suggestion:
     Add lock protection around all accesses to 'context'. Multiple threads are writing to this state simultaneously. Use existing lock (_lock) or create a dedicated lock for 'context'.

--------------------------------------------------------------------------------

52. [CRITICAL] exit_output
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/routing_context.py:36

   Description:
     Shared unknown 'exit_output' in class 'PathSegment'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 112: write
     - Line 139: read

   Suggestion:
     Add lock protection around all accesses to 'exit_output'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

53. [CRITICAL] location
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/find/match.py:26

   Description:
     Shared unknown 'location' in class 'Match'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 35: write
     - Line 136: write
     - Line 160: write
     - Line 184: write

   Suggestion:
     Add lock protection around all accesses to 'location'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

54. [CRITICAL] region
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/find/match.py:27

   Description:
     Shared unknown 'region' in class 'Match'. has 1 unprotected write and 20 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 21 total

   Suggestion:
     Add lock protection around all accesses to 'region'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

55. [CRITICAL] similarity
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/find/match.py:28

   Description:
     Shared float 'similarity' in class 'Match'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 37: write
     - Line 98: read

   Suggestion:
     Add lock protection around all accesses to 'similarity'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

56. [CRITICAL] _instances
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/hal/factory.py:52

   Description:
     Shared dict '_instances' in class 'HALFactory'. has 38 unprotected write operations (write-write race). Locks available but not used: ['_lock', '_anonymous'].

   Patterns Detected:
     - check-then-act

   Access Locations: 74 total

   Suggestion:
     Protect check-then-act pattern on '_instances' with a lock. The check and act operations must be atomic. Use existing lock (_lock) or create a dedicated lock for '_instances'.

--------------------------------------------------------------------------------

57. [CRITICAL] data
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/json_executor/config_parser.py:65

   Description:
     Shared str 'data' in class 'ImageAsset'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 90: read
     - Line 109: read
     - Line 822: write
     - Line 834: write
     - Line 856: read

   Suggestion:
     Add lock protection around all accesses to 'data'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

58. [CRITICAL] file_path
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/json_executor/config_parser.py:70

   Description:
     Shared unknown 'file_path' in class 'ImageAsset'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 91: write
     - Line 92: read
     - Line 93: write
     - Line 94: read

   Suggestion:
     Protect check-then-act pattern on 'file_path' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

59. [CRITICAL] _logging_initialized
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/logging/logger.py:345

   Description:
     Module-level bool '_logging_initialized'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 352: read
     - Line 375: write

   Suggestion:
     Add lock protection around all accesses to '_logging_initialized'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

60. [CRITICAL] active_pixels
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/masks/mask_generator.py:29

   Description:
     Shared int 'active_pixels' in class 'MaskMetadata'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 142: write
     - Line 192: write
     - Line 235: write
     - Line 319: write
     - Line 376: write

   Suggestion:
     Add lock protection around all accesses to 'active_pixels'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

61. [CRITICAL] patterns
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/migrations/brobot_converter.py:27

   Description:
     Shared list 'patterns' in class 'BrobotStateImage'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 119: write
     - Line 306: read
     - Line 307: read

   Suggestion:
     Add lock protection around all accesses to 'patterns'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

62. [CRITICAL] total_images
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/migrations/brobot_converter.py:35

   Description:
     Shared int 'total_images' in class 'ConversionReport'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 105: write
     - Line 556: read

   Suggestion:
     Add lock protection around all accesses to 'total_images'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

63. [CRITICAL] converted_states
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/migrations/brobot_converter.py:36

   Description:
     Shared int 'converted_states' in class 'ConversionReport'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 113: read_write
     - Line 556: read

   Suggestion:
     Add lock protection around all accesses to 'converted_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

64. [CRITICAL] total_elements
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/migrations/brobot_converter.py:37

   Description:
     Shared int 'total_elements' in class 'ConversionReport'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 173: read_write
     - Line 557: read

   Suggestion:
     Add lock protection around all accesses to 'total_elements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

65. [CRITICAL] start_time
   Type: datetime
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_executor.py:40

   Description:
     Shared datetime 'start_time' in class 'MockExecutionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 54: read
     - Line 111: write

   Suggestion:
     Add lock protection around all accesses to 'start_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

66. [CRITICAL] end_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_executor.py:41

   Description:
     Shared unknown 'end_time' in class 'MockExecutionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 55: read
     - Line 55: read
     - Line 130: write
     - Line 131: write

   Suggestion:
     Add lock protection around all accesses to 'end_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

67. [CRITICAL] total_duration_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_executor.py:42

   Description:
     Shared float 'total_duration_ms' in class 'MockExecutionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 56: read
     - Line 132: write

   Suggestion:
     Add lock protection around all accesses to 'total_duration_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

68. [CRITICAL] final_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_executor.py:44

   Description:
     Shared set 'final_states' in class 'MockExecutionResult'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 58: read
     - Line 133: write
     - Line 142: read

   Suggestion:
     Add lock protection around all accesses to 'final_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

69. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_executor.py:46

   Description:
     Shared bool 'success' in class 'MockExecutionResult'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 60: read
     - Line 63: read
     - Line 136: read
     - Line 139: write

   Suggestion:
     Protect check-then-act pattern on 'success' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

70. [CRITICAL] success_rate
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_executor.py:47

   Description:
     Shared float 'success_rate' in class 'MockExecutionResult'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 61: read
     - Line 138: write
     - Line 139: read

   Suggestion:
     Add lock protection around all accesses to 'success_rate'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

71. [CRITICAL] _mock_mode
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_mode_manager.py:19

   Description:
     Shared bool '_mock_mode' in class 'MockModeManager'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 29: write
     - Line 54: read
     - Line 70: write
     - Line 77: write
     - Line 123: write

   Suggestion:
     Add lock protection around all accesses to '_mock_mode'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

72. [CRITICAL] _initialized
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_mode_manager.py:20

   Description:
     Shared bool '_initialized' in class 'MockModeManager'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 30: write
     - Line 51: read
     - Line 71: write
     - Line 78: write
     - Line 82: write
     - Line 124: write

   Suggestion:
     Add lock protection around all accesses to '_initialized'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

73. [CRITICAL] probability
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_state_management.py:17

   Description:
     Shared int 'probability' in class 'StateConfig'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 44: write
     - Line 50: write
     - Line 81: write
     - Line 107: read
     - Line 211: read

   Suggestion:
     Add lock protection around all accesses to 'probability'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

74. [CRITICAL] active
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_state_management.py:18

   Description:
     Shared bool 'active' in class 'StateConfig'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 121: write
     - Line 134: write
     - Line 212: read

   Suggestion:
     Add lock protection around all accesses to 'active'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

75. [CRITICAL] elements
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/mock_state_management.py:19

   Description:
     Shared dict 'elements' in class 'StateConfig'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 86: write
     - Line 86: write
     - Line 104: read
     - Line 105: read
     - Line 105: read
     - Line 213: read
     - Line 214: read

   Suggestion:
     Add lock protection around all accesses to 'elements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

76. [CRITICAL] run_id
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/recorder.py:32

   Description:
     Shared unknown 'run_id' in class 'RecorderConfig'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (10):
     - Line 76: read
     - Line 77: write
     - Line 77: read
     - Line 79: write
     - Line 83: read
     - Line 85: read
     - Line 313: read
     - Line 334: read
     - Line 343: read
     - Line 381: read

   Suggestion:
     Protect check-then-act pattern on 'run_id' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

77. [CRITICAL] text
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/snapshot.py:54

   Description:
     Shared str 'text' in class 'ActionRecord'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 73: read
     - Line 159: write

   Suggestion:
     Add lock protection around all accesses to 'text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

78. [CRITICAL] timestamp
   Type: datetime
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/snapshot.py:56

   Description:
     Shared datetime 'timestamp' in class 'ActionRecord'. has 1 unprotected write and 8 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (9):
     - Line 75: read
     - Line 123: read
     - Line 122: read
     - Line 163: write
     - Line 265: read
     - Line 302: read
     - Line 312: read
     - Line 335: read
     - Line 372: read

   Suggestion:
     Add lock protection around all accesses to 'timestamp'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

79. [CRITICAL] state_hash
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/state_screenshot.py:37

   Description:
     Shared str 'state_hash' in class 'StateScreenshot'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 11 total

   Suggestion:
     Add lock protection around all accesses to 'state_hash'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

80. [CRITICAL] matches
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/mock/state_screenshot.py:297

   Description:
     Shared list 'matches' in class 'ActionVisualization'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (6):
     - Line 197: write
     - Line 202: read
     - Line 205: read
     - Line 209: read
     - Line 212: read
     - Line 311: read

   Suggestion:
     Add lock protection around all accesses to 'matches'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

81. [CRITICAL] regions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/search_regions.py:31

   Description:
     Shared list 'regions' in class 'SearchRegions'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 14 total

   Suggestion:
     Add lock protection around all accesses to 'regions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

82. [CRITICAL] fixed_region
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/search_regions.py:34

   Description:
     Shared Optional 'fixed_region' in class 'SearchRegions'. has 6 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 19 total

   Suggestion:
     Protect check-then-act pattern on 'fixed_region' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

83. [CRITICAL] transition
   Type: TaskSequenceStateTransition
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/enhanced_transition_executor.py:48

   Description:
     Shared TaskSequenceStateTransition 'transition' in class 'ExecutionContext'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 27 total

   Suggestion:
     Add lock protection around all accesses to 'transition'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

84. [CRITICAL] phase
   Type: ExecutionPhase
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/enhanced_transition_executor.py:49

   Description:
     Shared ExecutionPhase 'phase' in class 'ExecutionContext'. has 7 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 11 total

   Suggestion:
     Protect check-then-act pattern on 'phase' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

85. [CRITICAL] activated_states
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/enhanced_transition_executor.py:50

   Description:
     Shared unknown 'activated_states' in class 'ExecutionContext'. has 1 unprotected write and 13 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 14 total

   Suggestion:
     Protect check-then-act pattern on 'activated_states' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

86. [CRITICAL] successful_incoming
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/enhanced_transition_executor.py:51

   Description:
     Shared unknown 'successful_incoming' in class 'ExecutionContext'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 59: read
     - Line 60: write
     - Line 315: read
     - Line 316: read
     - Line 434: read
     - Line 434: read

   Suggestion:
     Protect check-then-act pattern on 'successful_incoming' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

87. [CRITICAL] failed_incoming
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/enhanced_transition_executor.py:52

   Description:
     Shared unknown 'failed_incoming' in class 'ExecutionContext'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 61: read
     - Line 62: write
     - Line 318: read
     - Line 319: read

   Suggestion:
     Protect check-then-act pattern on 'failed_incoming' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

88. [CRITICAL] rollback_needed
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/enhanced_transition_executor.py:53

   Description:
     Shared bool 'rollback_needed' in class 'ExecutionContext'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 157: write
     - Line 172: write
     - Line 505: read

   Suggestion:
     Add lock protection around all accesses to 'rollback_needed'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

89. [CRITICAL] transitions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:39

   Description:
     Shared list 'transitions' in class 'NavigationPath'. has 1 unprotected write and 7 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (8):
     - Line 47: read
     - Line 196: write
     - Line 344: read
     - Line 345: read
     - Line 345: read
     - Line 353: read
     - Line 464: read
     - Line 467: read

   Suggestion:
     Add lock protection around all accesses to 'transitions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

90. [CRITICAL] total_cost
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:40

   Description:
     Shared float 'total_cost' in class 'NavigationPath'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 232: write
     - Line 412: write
     - Line 417: read_write
     - Line 462: read

   Suggestion:
     Add lock protection around all accesses to 'total_cost'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

91. [CRITICAL] estimated_duration
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:41

   Description:
     Shared float 'estimated_duration' in class 'NavigationPath'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 235: write
     - Line 463: read

   Suggestion:
     Add lock protection around all accesses to 'estimated_duration'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

92. [CRITICAL] complexity
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:42

   Description:
     Shared str 'complexity' in class 'NavigationPath'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 240: write
     - Line 242: write
     - Line 244: write
     - Line 461: read

   Suggestion:
     Add lock protection around all accesses to 'complexity'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

93. [CRITICAL] path
   Type: NavigationPath
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:54

   Description:
     Shared NavigationPath 'path' in class 'NavigationContext'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 22 total

   Suggestion:
     Add lock protection around all accesses to 'path'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

94. [CRITICAL] current_transition_index
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:55

   Description:
     Shared int 'current_transition_index' in class 'NavigationContext'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 267: write
     - Line 357: write

   Suggestion:
     Add lock protection around all accesses to 'current_transition_index'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

95. [CRITICAL] failed_transition
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:57

   Description:
     Shared unknown 'failed_transition' in class 'NavigationContext'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 282: write
     - Line 343: read
     - Line 345: read
     - Line 347: read

   Suggestion:
     Add lock protection around all accesses to 'failed_transition'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

96. [CRITICAL] recovery_attempts
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/pathfinding_navigator.py:60

   Description:
     Shared int 'recovery_attempts' in class 'NavigationContext'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 310: read_write
     - Line 312: read
     - Line 319: read

   Suggestion:
     Add lock protection around all accesses to 'recovery_attempts'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

97. [CRITICAL] states
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:36

   Description:
     Shared list 'states' in class 'Path'. has 1 unprotected write and 7 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (8):
     - Line 43: read
     - Line 50: write
     - Line 50: read
     - Line 58: read
     - Line 79: read
     - Line 83: read
     - Line 405: read
     - Line 434: read

   Suggestion:
     Add lock protection around all accesses to 'states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

98. [CRITICAL] transitions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:37

   Description:
     Shared list 'transitions' in class 'Path'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 12 total

   Suggestion:
     Add lock protection around all accesses to 'transitions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

99. [CRITICAL] total_cost
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:38

   Description:
     Shared float 'total_cost' in class 'Path'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 52: write
     - Line 52: read
     - Line 166: read
     - Line 296: write
     - Line 417: write
     - Line 469: read

   Suggestion:
     Add lock protection around all accesses to 'total_cost'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

100. [CRITICAL] total_probability
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:39

   Description:
     Shared float 'total_probability' in class 'Path'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 53: write
     - Line 53: read
     - Line 400: write
     - Line 423: write

   Suggestion:
     Add lock protection around all accesses to 'total_probability'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

101. [CRITICAL] strategy
   Type: PathStrategy
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:103

   Description:
     Shared PathStrategy 'strategy' in class 'HybridPathFinder'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 141: write
     - Line 141: read
     - Line 145: read
     - Line 479: read

   Suggestion:
     Add lock protection around all accesses to 'strategy'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

102. [CRITICAL] state_cost_weight
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:106

   Description:
     Shared float 'state_cost_weight' in class 'HybridPathFinder'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 372: write
     - Line 380: write
     - Line 418: read

   Suggestion:
     Add lock protection around all accesses to 'state_cost_weight'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

103. [CRITICAL] transition_cost_weight
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:107

   Description:
     Shared float 'transition_cost_weight' in class 'HybridPathFinder'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 373: write
     - Line 381: write
     - Line 419: read

   Suggestion:
     Add lock protection around all accesses to 'transition_cost_weight'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

104. [CRITICAL] probability_weight
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:108

   Description:
     Shared float 'probability_weight' in class 'HybridPathFinder'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 374: write
     - Line 382: write
     - Line 420: read

   Suggestion:
     Add lock protection around all accesses to 'probability_weight'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

105. [CRITICAL] reliability_weight
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:109

   Description:
     Shared float 'reliability_weight' in class 'HybridPathFinder'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 370: read
     - Line 371: write
     - Line 379: write
     - Line 421: read

   Suggestion:
     Protect check-then-act pattern on 'reliability_weight' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

106. [CRITICAL] _path_cache
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/hybrid_path_finder.py:112

   Description:
     Shared dict '_path_cache' in class 'HybridPathFinder'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 136: read
     - Line 138: read
     - Line 138: read
     - Line 163: write
     - Line 163: write
     - Line 163: read
     - Line 474: read
     - Line 481: read

   Suggestion:
     Add lock protection around all accesses to '_path_cache'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

107. [CRITICAL] total_actions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:17

   Description:
     Shared int 'total_actions' in class 'ExecutionStatistics'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 45: read
     - Line 47: read
     - Line 64: read
     - Line 241: read_write

   Suggestion:
     Add lock protection around all accesses to 'total_actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

108. [CRITICAL] successful_actions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:20

   Description:
     Shared int 'successful_actions' in class 'ExecutionStatistics'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 47: read
     - Line 65: read
     - Line 257: read_write

   Suggestion:
     Add lock protection around all accesses to 'successful_actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

109. [CRITICAL] failed_actions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:23

   Description:
     Shared int 'failed_actions' in class 'ExecutionStatistics'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 66: read
     - Line 259: read_write

   Suggestion:
     Add lock protection around all accesses to 'failed_actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

110. [CRITICAL] retried_actions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:26

   Description:
     Shared int 'retried_actions' in class 'ExecutionStatistics'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 67: read
     - Line 272: read_write

   Suggestion:
     Add lock protection around all accesses to 'retried_actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

111. [CRITICAL] start_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:32

   Description:
     Shared unknown 'start_time' in class 'ExecutionStatistics'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 56: read
     - Line 57: read
     - Line 105: read
     - Line 106: read
     - Line 276: write

   Suggestion:
     Add lock protection around all accesses to 'start_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

112. [CRITICAL] end_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:35

   Description:
     Shared unknown 'end_time' in class 'ExecutionStatistics'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 56: read
     - Line 57: read
     - Line 105: read
     - Line 106: read
     - Line 252: write
     - Line 280: write

   Suggestion:
     Add lock protection around all accesses to 'end_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

113. [CRITICAL] attempt_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:83

   Description:
     Shared int 'attempt_count' in class 'ActionState'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 267: read_write
     - Line 270: read

   Suggestion:
     Add lock protection around all accesses to 'attempt_count'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

114. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:86

   Description:
     Shared bool 'success' in class 'ActionState'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 253: write
     - Line 319: read

   Suggestion:
     Add lock protection around all accesses to 'success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

115. [CRITICAL] start_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:92

   Description:
     Shared unknown 'start_time' in class 'ActionState'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 56: read
     - Line 57: read
     - Line 105: read
     - Line 106: read
     - Line 276: write

   Suggestion:
     Add lock protection around all accesses to 'start_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

116. [CRITICAL] end_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:95

   Description:
     Shared unknown 'end_time' in class 'ActionState'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 56: read
     - Line 57: read
     - Line 105: read
     - Line 106: read
     - Line 252: write
     - Line 280: write

   Suggestion:
     Add lock protection around all accesses to 'end_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

117. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/workflow_orchestrator.py:56

   Description:
     Shared bool 'success' in class 'WorkflowResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 73: read
     - Line 130: read
     - Line 191: write
     - Line 326: write

   Suggestion:
     Add lock protection around all accesses to 'success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

118. [CRITICAL] error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/workflow_orchestrator.py:59

   Description:
     Shared unknown 'error' in class 'WorkflowResult'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 136: read
     - Line 151: read
     - Line 216: read
     - Line 327: write

   Suggestion:
     Add lock protection around all accesses to 'error'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

119. [CRITICAL] context
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/workflow_orchestrator.py:62

   Description:
     Shared unknown 'context' in class 'WorkflowResult'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 17 total

   Suggestion:
     Add lock protection around all accesses to 'context'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

120. [CRITICAL] retry_policy
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/workflow_orchestrator.py:96

   Description:
     Shared unknown 'retry_policy' in class 'WorkflowOrchestrator'. has 1 unprotected write and 6 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (7):
     - Line 119: write
     - Line 119: read
     - Line 132: read
     - Line 202: read
     - Line 204: read
     - Line 219: read
     - Line 221: read

   Suggestion:
     Add lock protection around all accesses to 'retry_policy'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

121. [CRITICAL] metadata
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/perception/matching.py:18

   Description:
     Shared dict 'metadata' in class 'MatchResult'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 79: write
     - Line 82: read
     - Line 165: read
     - Line 165: read
     - Line 273: write
     - Line 294: read
     - Line 323: write

   Suggestion:
     Add lock protection around all accesses to 'metadata'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

122. [CRITICAL] total_actions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:23

   Description:
     Shared int 'total_actions' in class 'SessionMetadata'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 40: write
     - Line 50: read
     - Line 51: read

   Suggestion:
     Add lock protection around all accesses to 'total_actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

123. [CRITICAL] successful_actions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:24

   Description:
     Shared int 'successful_actions' in class 'SessionMetadata'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 41: write
     - Line 51: read

   Suggestion:
     Add lock protection around all accesses to 'successful_actions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

124. [CRITICAL] retry_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/scheduling/scheduled_task.py:68

   Description:
     Shared int 'retry_count' in class 'ScheduledTask'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 139: write
     - Line 142: read_write
     - Line 149: read_write
     - Line 167: read

   Suggestion:
     Add lock protection around all accesses to 'retry_count'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

125. [CRITICAL] started_at
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/scheduling/scheduled_task.py:73

   Description:
     Shared unknown 'started_at' in class 'ScheduledTask'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 131: write
     - Line 156: write

   Suggestion:
     Add lock protection around all accesses to 'started_at'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

126. [CRITICAL] completed_at
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/scheduling/scheduled_task.py:74

   Description:
     Shared unknown 'completed_at' in class 'ScheduledTask'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 138: write
     - Line 157: write

   Suggestion:
     Add lock protection around all accesses to 'completed_at'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

127. [CRITICAL] status
   Type: TaskStatus
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/scheduling/scheduled_task.py:77

   Description:
     Shared TaskStatus 'status' in class 'ScheduledTask'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 114: read
     - Line 130: write
     - Line 137: write
     - Line 141: write
     - Line 148: write
     - Line 155: write
     - Line 167: read

   Suggestion:
     Add lock protection around all accesses to 'status'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

128. [CRITICAL] last_error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/scheduling/scheduled_task.py:78

   Description:
     Shared unknown 'last_error' in class 'ScheduledTask'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 127: write
     - Line 143: write
     - Line 150: write
     - Line 158: write

   Suggestion:
     Add lock protection around all accesses to 'last_error'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

129. [CRITICAL] needs_scaling
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/screen/physical_screen.py:33

   Description:
     Shared bool 'needs_scaling' in class 'PhysicalScreen'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 48: write
     - Line 52: read
     - Line 130: read

   Suggestion:
     Add lock protection around all accesses to 'needs_scaling'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

130. [CRITICAL] scale_factor
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/screen/physical_screen.py:36

   Description:
     Shared float 'scale_factor' in class 'PhysicalScreen'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (7):
     - Line 53: write
     - Line 57: read
     - Line 59: write
     - Line 132: read
     - Line 133: read
     - Line 134: read
     - Line 135: read

   Suggestion:
     Protect check-then-act pattern on 'scale_factor' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

131. [CRITICAL] _initialized
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/startup/qontinui_startup.py:20

   Description:
     Shared bool '_initialized' in class 'QontinuiStartup'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (2):
     - Line 28: read
     - Line 31: write

   Suggestion:
     Protect check-then-act pattern on '_initialized' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

132. [CRITICAL] total_searches
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/statemanagement/state_detector.py:47

   Description:
     Shared int 'total_searches' in class 'StateDetector'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 70: read_write
     - Line 311: read
     - Line 313: read

   Suggestion:
     Add lock protection around all accesses to 'total_searches'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

133. [CRITICAL] successful_searches
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/statemanagement/state_detector.py:48

   Description:
     Shared int 'successful_searches' in class 'StateDetector'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 95: read_write
     - Line 313: read

   Suggestion:
     Add lock protection around all accesses to 'successful_searches'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

134. [CRITICAL] active_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/statemanagement/state_memory.py:48

   Description:
     Shared set 'active_states' in class 'StateMemory'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 20 total

   Suggestion:
     Protect check-then-act pattern on 'active_states' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

135. [CRITICAL] previous_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/statemanagement/state_memory.py:51

   Description:
     Shared set 'previous_states' in class 'StateMemory'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 164: write
     - Line 170: write
     - Line 203: write
     - Line 207: read
     - Line 233: read

   Suggestion:
     Add lock protection around all accesses to 'previous_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

136. [CRITICAL] expected_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/statemanagement/state_memory.py:52

   Description:
     Shared set 'expected_states' in class 'StateMemory'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 217: write
     - Line 228: read
     - Line 234: read

   Suggestion:
     Add lock protection around all accesses to 'expected_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

137. [CRITICAL] active_groups
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/enhanced_active_state_set.py:48

   Description:
     Shared dict 'active_groups' in class 'EnhancedActiveStateSet'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 19 total

   Suggestion:
     Add lock protection around all accesses to 'active_groups'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

138. [CRITICAL] activation_history
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/enhanced_active_state_set.py:51

   Description:
     Shared list 'activation_history' in class 'EnhancedActiveStateSet'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 358: read
     - Line 361: read
     - Line 362: write
     - Line 362: read
     - Line 362: read
     - Line 376: read

   Suggestion:
     Protect check-then-act pattern on 'activation_history' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

139. [CRITICAL] embedding
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:48

   Description:
     Shared unknown 'embedding' in class 'Element'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 71: read
     - Line 71: read
     - Line 84: write
     - Line 86: write

   Suggestion:
     Add lock protection around all accesses to 'embedding'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

140. [CRITICAL] element_type
   Type: ElementType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:50

   Description:
     Shared ElementType 'element_type' in class 'Element'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 73: read
     - Line 88: write
     - Line 191: read

   Suggestion:
     Add lock protection around all accesses to 'element_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

141. [CRITICAL] elements
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:168

   Description:
     Shared list 'elements' in class 'State'. has 1 unprotected write and 7 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (8):
     - Line 183: read
     - Line 191: read
     - Line 195: read
     - Line 212: read
     - Line 225: write
     - Line 259: read
     - Line 268: read
     - Line 268: read

   Suggestion:
     Add lock protection around all accesses to 'elements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

142. [CRITICAL] transitions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:170

   Description:
     Shared list 'transitions' in class 'State'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 202: read
     - Line 206: read
     - Line 214: read
     - Line 226: write
     - Line 317: read

   Suggestion:
     Add lock protection around all accesses to 'transitions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

143. [CRITICAL] timestamp
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:175

   Description:
     Shared unknown 'timestamp' in class 'State'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 179: read
     - Line 180: write
     - Line 219: read
     - Line 219: read
     - Line 228: write
     - Line 230: write

   Suggestion:
     Protect check-then-act pattern on 'timestamp' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

144. [CRITICAL] states
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:291

   Description:
     Shared dict 'states' in class 'StateGraph'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (10):
     - Line 297: write
     - Line 297: write
     - Line 297: read
     - Line 304: read
     - Line 305: read
     - Line 305: read
     - Line 309: read
     - Line 329: read
     - Line 329: read
     - Line 357: read

   Suggestion:
     Add lock protection around all accesses to 'states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

145. [CRITICAL] initial_state
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:292

   Description:
     Shared unknown 'initial_state' in class 'StateGraph'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 299: read
     - Line 300: write
     - Line 358: read
     - Line 372: write

   Suggestion:
     Protect check-then-act pattern on 'initial_state' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

146. [CRITICAL] current_state
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/models.py:293

   Description:
     Shared unknown 'current_state' in class 'StateGraph'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 359: read
     - Line 373: write

   Suggestion:
     Add lock protection around all accesses to 'current_state'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

147. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/transition_executor.py:51

   Description:
     Shared bool 'success' in class 'TransitionExecutionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 131: write
     - Line 230: read

   Suggestion:
     Add lock protection around all accesses to 'success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

148. [CRITICAL] context
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/transition_executor.py:53

   Description:
     Shared dict 'context' in class 'TransitionExecutionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 128: write
     - Line 193: read

   Suggestion:
     Add lock protection around all accesses to 'context'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

149. [CRITICAL] path
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/state_management/traversal.py:31

   Description:
     Shared list 'path' in class 'TraversalResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 346: write
     - Line 368: read
     - Line 481: write

   Suggestion:
     Add lock protection around all accesses to 'path'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

150. [CRITICAL] _instance
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/wrappers/controller.py:71

   Description:
     Shared Optional '_instance' in class 'ExecutionModeController'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 104: read
     - Line 105: write
     - Line 107: read
     - Line 122: write

   Suggestion:
     Protect check-then-act pattern on '_instance' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

151. [CRITICAL] find_options
   Type: PatternFindOptions
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/find_and_click.py:31

   Description:
     Shared PatternFindOptions 'find_options' in class 'FindAndClickOptions'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 43: write
     - Line 69: write
     - Line 69: read
     - Line 122: write
     - Line 122: read
     - Line 126: write

   Suggestion:
     Protect check-then-act pattern on 'find_options' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

152. [CRITICAL] click_options
   Type: ClickOptions
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/find_and_click.py:32

   Description:
     Shared ClickOptions 'click_options' in class 'FindAndClickOptions'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 55: write
     - Line 83: write
     - Line 83: read
     - Line 123: write
     - Line 123: read
     - Line 127: write

   Suggestion:
     Protect check-then-act pattern on 'click_options' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

153. [CRITICAL] button
   Type: MouseButton
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/click/mouse_press_options.py:22

   Description:
     Shared MouseButton 'button' in class 'MousePressOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 37: write
     - Line 128: read

   Suggestion:
     Add lock protection around all accesses to 'button'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

154. [CRITICAL] pause_before_mouse_down
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/click/mouse_press_options.py:23

   Description:
     Shared float 'pause_before_mouse_down' in class 'MousePressOptions'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 49: write
     - Line 95: read
     - Line 129: read
     - Line 130: read

   Suggestion:
     Add lock protection around all accesses to 'pause_before_mouse_down'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

155. [CRITICAL] pause_after_mouse_down
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/click/mouse_press_options.py:24

   Description:
     Shared float 'pause_after_mouse_down' in class 'MousePressOptions'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 61: write
     - Line 96: read
     - Line 131: read
     - Line 132: read

   Suggestion:
     Add lock protection around all accesses to 'pause_after_mouse_down'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

156. [CRITICAL] pause_before_mouse_up
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/click/mouse_press_options.py:25

   Description:
     Shared float 'pause_before_mouse_up' in class 'MousePressOptions'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 73: write
     - Line 97: read
     - Line 133: read
     - Line 134: read

   Suggestion:
     Add lock protection around all accesses to 'pause_before_mouse_up'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

157. [CRITICAL] pause_after_mouse_up
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/click/mouse_press_options.py:26

   Description:
     Shared float 'pause_after_mouse_up' in class 'MousePressOptions'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 85: write
     - Line 98: read
     - Line 135: read
     - Line 136: read

   Suggestion:
     Add lock protection around all accesses to 'pause_after_mouse_up'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

158. [CRITICAL] size
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_cluster.py:26

   Description:
     Shared int 'size' in class 'ColorCluster'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 80: write
     - Line 90: read

   Suggestion:
     Add lock protection around all accesses to 'size'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

159. [CRITICAL] percentage
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_cluster.py:27

   Description:
     Shared float 'percentage' in class 'ColorCluster'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 81: write
     - Line 142: read

   Suggestion:
     Add lock protection around all accesses to 'percentage'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

160. [CRITICAL] n_clusters
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_cluster.py:50

   Description:
     Shared int 'n_clusters' in class 'ColorClusterAnalyzer'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 66: write
     - Line 66: read

   Suggestion:
     Add lock protection around all accesses to 'n_clusters'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

161. [CRITICAL] diameter
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_find_options.py:82

   Description:
     Shared int 'diameter' in class 'ColorFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 118: write
     - Line 170: read

   Suggestion:
     Add lock protection around all accesses to 'diameter'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

162. [CRITICAL] kmeans
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_find_options.py:83

   Description:
     Shared int 'kmeans' in class 'ColorFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 130: write
     - Line 172: read

   Suggestion:
     Add lock protection around all accesses to 'kmeans'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

163. [CRITICAL] area_filtering
   Type: AreaFilteringOptions
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_find_options.py:86

   Description:
     Shared AreaFilteringOptions 'area_filtering' in class 'ColorFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 143: write
     - Line 174: read

   Suggestion:
     Add lock protection around all accesses to 'area_filtering'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

164. [CRITICAL] bin_options
   Type: HSVBinOptions
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_find_options.py:87

   Description:
     Shared HSVBinOptions 'bin_options' in class 'ColorFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 159: write
     - Line 176: read

   Suggestion:
     Add lock protection around all accesses to 'bin_options'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

165. [CRITICAL] strategy_registry
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/find_pipeline.py:34

   Description:
     Shared Optional 'strategy_registry' in class 'FindPipeline'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 134: read
     - Line 135: read
     - Line 358: write

   Suggestion:
     Add lock protection around all accesses to 'strategy_registry'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

166. [CRITICAL] enable_preprocessing
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/find_pipeline.py:37

   Description:
     Shared bool 'enable_preprocessing' in class 'FindPipeline'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 68: read
     - Line 385: write

   Suggestion:
     Add lock protection around all accesses to 'enable_preprocessing'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

167. [CRITICAL] enable_postprocessing
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/find_pipeline.py:38

   Description:
     Shared bool 'enable_postprocessing' in class 'FindPipeline'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 75: read
     - Line 394: write

   Suggestion:
     Add lock protection around all accesses to 'enable_postprocessing'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

168. [CRITICAL] enable_caching
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/find_pipeline.py:39

   Description:
     Shared bool 'enable_caching' in class 'FindPipeline'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 61: read
     - Line 79: read
     - Line 367: write

   Suggestion:
     Add lock protection around all accesses to 'enable_caching'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

169. [CRITICAL] enable_profiling
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/find_pipeline.py:40

   Description:
     Shared bool 'enable_profiling' in class 'FindPipeline'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 83: read
     - Line 376: write

   Suggestion:
     Add lock protection around all accesses to 'enable_profiling'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

170. [CRITICAL] _cache
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/find_pipeline.py:43

   Description:
     Shared dict '_cache' in class 'FindPipeline'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 63: read
     - Line 65: read
     - Line 65: read
     - Line 80: write
     - Line 80: write
     - Line 80: read
     - Line 322: read

   Suggestion:
     Add lock protection around all accesses to '_cache'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

171. [CRITICAL] _metrics
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/find_pipeline.py:46

   Description:
     Shared dict '_metrics' in class 'FindPipeline'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (8):
     - Line 84: write
     - Line 84: write
     - Line 84: read
     - Line 85: write
     - Line 85: write
     - Line 85: read
     - Line 331: read
     - Line 335: read

   Suggestion:
     Protect check-then-act pattern on '_metrics' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

172. [CRITICAL] x_adjustment
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_adjustment_options.py:20

   Description:
     Shared float 'x_adjustment' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 55: write
     - Line 55: read
     - Line 68: write
     - Line 77: write
     - Line 112: read

   Suggestion:
     Add lock protection around all accesses to 'x_adjustment'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

173. [CRITICAL] y_adjustment
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_adjustment_options.py:23

   Description:
     Shared float 'y_adjustment' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 56: write
     - Line 56: read
     - Line 69: write
     - Line 82: write
     - Line 113: read

   Suggestion:
     Add lock protection around all accesses to 'y_adjustment'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

174. [CRITICAL] width_factor
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_adjustment_options.py:26

   Description:
     Shared float 'width_factor' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 57: write
     - Line 57: read
     - Line 70: write
     - Line 87: write
     - Line 114: read

   Suggestion:
     Add lock protection around all accesses to 'width_factor'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

175. [CRITICAL] height_factor
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_adjustment_options.py:29

   Description:
     Shared float 'height_factor' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 58: write
     - Line 58: read
     - Line 71: write
     - Line 92: write
     - Line 115: read

   Suggestion:
     Add lock protection around all accesses to 'height_factor'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

176. [CRITICAL] target_x_offset
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_adjustment_options.py:33

   Description:
     Shared float 'target_x_offset' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 59: write
     - Line 59: read
     - Line 72: write
     - Line 97: write
     - Line 116: read

   Suggestion:
     Add lock protection around all accesses to 'target_x_offset'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

177. [CRITICAL] target_y_offset
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_adjustment_options.py:36

   Description:
     Shared float 'target_y_offset' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 60: write
     - Line 60: read
     - Line 73: write
     - Line 102: write
     - Line 117: read

   Suggestion:
     Add lock protection around all accesses to 'target_y_offset'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

178. [CRITICAL] fusion_method
   Type: FusionMethod
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_fusion_options.py:31

   Description:
     Shared FusionMethod 'fusion_method' in class 'MatchFusionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 59: write
     - Line 59: read
     - Line 70: write
     - Line 77: write
     - Line 102: read

   Suggestion:
     Add lock protection around all accesses to 'fusion_method'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

179. [CRITICAL] max_fusion_distance_x
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_fusion_options.py:34

   Description:
     Shared int 'max_fusion_distance_x' in class 'MatchFusionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 60: write
     - Line 60: read
     - Line 71: write
     - Line 82: write
     - Line 103: read

   Suggestion:
     Add lock protection around all accesses to 'max_fusion_distance_x'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

180. [CRITICAL] max_fusion_distance_y
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_fusion_options.py:37

   Description:
     Shared int 'max_fusion_distance_y' in class 'MatchFusionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 61: write
     - Line 61: read
     - Line 72: write
     - Line 87: write
     - Line 104: read

   Suggestion:
     Add lock protection around all accesses to 'max_fusion_distance_y'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

181. [CRITICAL] fusion_threshold
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/match_fusion_options.py:40

   Description:
     Shared float 'fusion_threshold' in class 'MatchFusionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 62: write
     - Line 62: read
     - Line 73: write
     - Line 92: write
     - Line 105: read

   Suggestion:
     Add lock protection around all accesses to 'fusion_threshold'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

182. [CRITICAL] strategy
   Type: Strategy
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/pattern_find_options.py:180

   Description:
     Shared Strategy 'strategy' in class 'PatternFindOptionsBuilder'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 11 total

   Suggestion:
     Protect check-then-act pattern on 'strategy' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

183. [CRITICAL] do_on_each
   Type: DoOnEach
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/pattern_find_options.py:181

   Description:
     Shared DoOnEach 'do_on_each' in class 'PatternFindOptionsBuilder'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (7):
     - Line 66: write
     - Line 66: read
     - Line 92: read
     - Line 194: write
     - Line 194: read
     - Line 198: write
     - Line 222: write

   Suggestion:
     Protect check-then-act pattern on 'do_on_each' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

184. [CRITICAL] match_fusion_options
   Type: MatchFusionOptions
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/pattern_find_options.py:182

   Description:
     Shared MatchFusionOptions 'match_fusion_options' in class 'PatternFindOptionsBuilder'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (7):
     - Line 67: write
     - Line 67: read
     - Line 96: read
     - Line 195: write
     - Line 195: read
     - Line 199: write
     - Line 236: write

   Suggestion:
     Protect check-then-act pattern on 'match_fusion_options' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

185. [CRITICAL] _implementations
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/strategy_registry.py:27

   Description:
     Shared dict '_implementations' in class 'StrategyRegistry'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 15 total

   Suggestion:
     Protect check-then-act pattern on '_implementations' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

186. [CRITICAL] _initialized
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/strategy_registry.py:30

   Description:
     Shared bool '_initialized' in class 'StrategyRegistry'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 34: read
     - Line 36: write
     - Line 110: write

   Suggestion:
     Protect check-then-act pattern on '_initialized' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

187. [CRITICAL] _default_registry
   Type: StrategyRegistry
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/strategy_registry.py:236

   Description:
     Module-level StrategyRegistry '_default_registry'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 245: read
     - Line 255: write

   Suggestion:
     Add lock protection around all accesses to '_default_registry'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

188. [CRITICAL] move_instantly
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/mouse/mouse_move_options.py:21

   Description:
     Shared bool 'move_instantly' in class 'MouseMoveOptions'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 30: write
     - Line 43: write

   Suggestion:
     Add lock protection around all accesses to 'move_instantly'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

189. [CRITICAL] button
   Type: MouseButton
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/mouse/mouse_press_options.py:33

   Description:
     Shared MouseButton 'button' in class 'MousePressOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 61: write
     - Line 61: read
     - Line 72: write
     - Line 79: write
     - Line 104: read

   Suggestion:
     Add lock protection around all accesses to 'button'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

190. [CRITICAL] press_duration
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/mouse/mouse_press_options.py:36

   Description:
     Shared float 'press_duration' in class 'MousePressOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 62: write
     - Line 62: read
     - Line 73: write
     - Line 84: write
     - Line 105: read

   Suggestion:
     Add lock protection around all accesses to 'press_duration'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

191. [CRITICAL] pause_after_press
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/mouse/mouse_press_options.py:39

   Description:
     Shared float 'pause_after_press' in class 'MousePressOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 63: write
     - Line 63: read
     - Line 74: write
     - Line 89: write
     - Line 106: read

   Suggestion:
     Add lock protection around all accesses to 'pause_after_press'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

192. [CRITICAL] pause_after_release
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/mouse/mouse_press_options.py:42

   Description:
     Shared float 'pause_after_release' in class 'MousePressOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 64: write
     - Line 64: read
     - Line 75: write
     - Line 94: write
     - Line 107: read

   Suggestion:
     Add lock protection around all accesses to 'pause_after_release'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

193. [CRITICAL] _strategies
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/region/define_region.py:278

   Description:
     Shared dict '_strategies' in class 'DefineRegion'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 288: write
     - Line 325: read

   Suggestion:
     Add lock protection around all accesses to '_strategies'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

194. [CRITICAL] define_as
   Type: DefineAs
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/region/define_region_options.py:39

   Description:
     Shared DefineAs 'define_as' in class 'DefineRegionOptions'. has 9 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (9):
     - Line 51: write
     - Line 60: write
     - Line 69: write
     - Line 78: write
     - Line 87: write
     - Line 96: write
     - Line 105: write
     - Line 114: write
     - Line 123: write

   Suggestion:
     Add lock protection around all accesses to 'define_as'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

195. [CRITICAL] type_method
   Type: TypeMethod
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/type_action.py:33

   Description:
     Shared TypeMethod 'type_method' in class 'TypeOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 46: write
     - Line 55: write
     - Line 104: write

   Suggestion:
     Add lock protection around all accesses to 'type_method'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

196. [CRITICAL] select_all
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/type_action.py:35

   Description:
     Shared bool 'select_all' in class 'TypeOptions'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 73: write
     - Line 179: read
     - Line 219: read

   Suggestion:
     Add lock protection around all accesses to 'select_all'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

197. [CRITICAL] verify_text
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/type_action.py:37

   Description:
     Shared bool 'verify_text' in class 'TypeOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 94: write
     - Line 196: read

   Suggestion:
     Add lock protection around all accesses to 'verify_text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

198. [CRITICAL] wait_type
   Type: WaitType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/wait/wait.py:37

   Description:
     Shared WaitType 'wait_type' in class 'WaitOptions'. has 6 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 52: write
     - Line 62: write
     - Line 71: write
     - Line 80: write
     - Line 89: write
     - Line 98: write

   Suggestion:
     Add lock protection around all accesses to 'wait_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

199. [CRITICAL] timeout
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/wait/wait.py:38

   Description:
     Shared float 'timeout' in class 'WaitOptions'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 53: write
     - Line 110: write

   Suggestion:
     Add lock protection around all accesses to 'timeout'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

200. [CRITICAL] min_distance_between_matches
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/implementations/find_all.py:34

   Description:
     Shared int 'min_distance_between_matches' in class 'FindAll'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 196: read
     - Line 208: read
     - Line 305: write

   Suggestion:
     Add lock protection around all accesses to 'min_distance_between_matches'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

201. [CRITICAL] overlap_threshold
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/implementations/find_all.py:35

   Description:
     Shared float 'overlap_threshold' in class 'FindAll'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 176: read
     - Line 317: write

   Suggestion:
     Add lock protection around all accesses to 'overlap_threshold'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

202. [CRITICAL] use_sliding_window
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/implementations/find_all.py:36

   Description:
     Shared bool 'use_sliding_window' in class 'FindAll'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 54: read
     - Line 329: write

   Suggestion:
     Add lock protection around all accesses to 'use_sliding_window'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

203. [CRITICAL] window_step
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/implementations/find_all.py:37

   Description:
     Shared int 'window_step' in class 'FindAll'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 103: read
     - Line 106: read
     - Line 330: write

   Suggestion:
     Add lock protection around all accesses to 'window_step'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

204. [CRITICAL] _find_all
   Type: FindAll
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/implementations/find_all.py:294

   Description:
     Shared FindAll '_find_all' in class 'FindAllBuilder'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (10):
     - Line 51: read
     - Line 305: write
     - Line 305: read
     - Line 317: write
     - Line 317: read
     - Line 329: write
     - Line 329: read
     - Line 330: write
     - Line 330: read
     - Line 339: read

   Suggestion:
     Protect check-then-act pattern on '_find_all' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

205. [CRITICAL] search_type
   Type: SearchType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:53

   Description:
     Shared SearchType 'search_type' in class 'BaseFindOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 150: write
     - Line 159: write
     - Line 168: write
     - Line 260: read

   Suggestion:
     Add lock protection around all accesses to 'search_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

206. [CRITICAL] similarity
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:55

   Description:
     Shared float 'similarity' in class 'BaseFindOptions'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 129: write
     - Line 239: read
     - Line 239: read
     - Line 259: read

   Suggestion:
     Add lock protection around all accesses to 'similarity'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

207. [CRITICAL] max_matches
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:58

   Description:
     Shared int 'max_matches' in class 'BaseFindOptions'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 181: write
     - Line 243: read
     - Line 247: read
     - Line 264: read
     - Line 265: read

   Suggestion:
     Add lock protection around all accesses to 'max_matches'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

208. [CRITICAL] min_matches
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:59

   Description:
     Shared int 'min_matches' in class 'BaseFindOptions'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 193: write
     - Line 245: read
     - Line 247: read

   Suggestion:
     Add lock protection around all accesses to 'min_matches'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

209. [CRITICAL] timeout
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:62

   Description:
     Shared float 'timeout' in class 'BaseFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 141: write
     - Line 241: read

   Suggestion:
     Add lock protection around all accesses to 'timeout'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

210. [CRITICAL] min_scale
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:48

   Description:
     Shared float 'min_scale' in class 'PatternFindOptions'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 162: write
     - Line 248: read
     - Line 250: read

   Suggestion:
     Add lock protection around all accesses to 'min_scale'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

211. [CRITICAL] max_scale
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:49

   Description:
     Shared float 'max_scale' in class 'PatternFindOptions'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 163: write
     - Line 248: read
     - Line 250: read

   Suggestion:
     Add lock protection around all accesses to 'max_scale'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

212. [CRITICAL] downsample_factor
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:68

   Description:
     Shared float 'downsample_factor' in class 'PatternFindOptions'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 222: write
     - Line 252: read
     - Line 252: read

   Suggestion:
     Add lock protection around all accesses to 'downsample_factor'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

213. [CRITICAL] search_text
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:63

   Description:
     Shared str 'search_text' in class 'TextFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 123: write
     - Line 279: read

   Suggestion:
     Add lock protection around all accesses to 'search_text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

214. [CRITICAL] search_texts
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:64

   Description:
     Shared list 'search_texts' in class 'TextFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 135: write
     - Line 279: read

   Suggestion:
     Add lock protection around all accesses to 'search_texts'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

215. [CRITICAL] match_type
   Type: TextMatchType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:73

   Description:
     Shared TextMatchType 'match_type' in class 'TextFindOptions'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 168: write
     - Line 177: write
     - Line 186: write
     - Line 198: write

   Suggestion:
     Add lock protection around all accesses to 'match_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

216. [CRITICAL] fuzzy_threshold
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:79

   Description:
     Shared float 'fuzzy_threshold' in class 'TextFindOptions'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 199: write
     - Line 281: read
     - Line 281: read

   Suggestion:
     Add lock protection around all accesses to 'fuzzy_threshold'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

217. [CRITICAL] scale_factor
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:86

   Description:
     Shared float 'scale_factor' in class 'TextFindOptions'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 247: write
     - Line 283: read

   Suggestion:
     Add lock protection around all accesses to 'scale_factor'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

218. [CRITICAL] confidence_threshold
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:91

   Description:
     Shared float 'confidence_threshold' in class 'TextFindOptions'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 259: write
     - Line 285: read
     - Line 285: read

   Suggestion:
     Add lock protection around all accesses to 'confidence_threshold'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

219. [CRITICAL] _ml_finder
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/implementations/find_image/__init__.py:76

   Description:
     Shared unknown '_ml_finder' in class 'ImageFinder'. has 1 unprotected write and 6 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (7):
     - Line 92: read
     - Line 94: read
     - Line 117: read
     - Line 118: read
     - Line 120: read
     - Line 126: read
     - Line 138: write

   Suggestion:
     Add lock protection around all accesses to '_ml_finder'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

220. [CRITICAL] _ocr_cache
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/implementations/find_text/find_text_orchestrator.py:47

   Description:
     Shared dict '_ocr_cache' in class 'FindTextOrchestrator'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 85: read
     - Line 86: read
     - Line 86: read
     - Line 103: write
     - Line 103: write
     - Line 103: read
     - Line 312: read

   Suggestion:
     Add lock protection around all accesses to '_ocr_cache'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

221. [CRITICAL] strategy
   Type: ExecutionStrategy
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/multiple/multiple_actions.py:45

   Description:
     Shared ExecutionStrategy 'strategy' in class 'MultipleActionsOptions'. has 4 unprotected write operations (write-write race). Locks available but not used: ['_stop_flag', '_anonymous'].

   Access Locations (6):
     - Line 63: write
     - Line 73: write
     - Line 82: write
     - Line 94: write
     - Line 142: read
     - Line 261: read

   Suggestion:
     Add lock protection around all accesses to 'strategy'. Multiple threads are writing to this state simultaneously. Use existing lock (_stop_flag) or create a dedicated lock for 'strategy'.

--------------------------------------------------------------------------------

222. [CRITICAL] enabled
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/process/process_repetition_options.py:18

   Description:
     Shared bool 'enabled' in class 'ProcessRepetitionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 53: read
     - Line 78: write
     - Line 78: read
     - Line 83: write
     - Line 97: write
     - Line 143: read

   Suggestion:
     Protect check-then-act pattern on 'enabled' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

223. [CRITICAL] max_repeats
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/process/process_repetition_options.py:21

   Description:
     Shared int 'max_repeats' in class 'ProcessRepetitionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 57: read
     - Line 79: write
     - Line 79: read
     - Line 84: write
     - Line 109: write
     - Line 144: read

   Suggestion:
     Protect check-then-act pattern on 'max_repeats' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

224. [CRITICAL] delay
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/process/process_repetition_options.py:28

   Description:
     Shared float 'delay' in class 'ProcessRepetitionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 61: read
     - Line 80: write
     - Line 80: read
     - Line 85: write
     - Line 121: write
     - Line 145: read

   Suggestion:
     Protect check-then-act pattern on 'delay' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

225. [CRITICAL] until_success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/process/process_repetition_options.py:31

   Description:
     Shared bool 'until_success' in class 'ProcessRepetitionOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 65: read
     - Line 81: write
     - Line 81: read
     - Line 86: write
     - Line 133: write
     - Line 146: read

   Suggestion:
     Protect check-then-act pattern on 'until_success' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

226. [CRITICAL] _instance
   Type: NoneType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_executor.py:114

   Description:
     Shared NoneType '_instance' in class 'ActionExecutor'. has 1 unprotected write and 3 unprotected reads (read-write race). Locks available but not used: ['_lock', '_anonymous'].

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 119: read
     - Line 121: read
     - Line 122: write
     - Line 123: read

   Suggestion:
     Protect check-then-act pattern on '_instance' with a lock. The check and act operations must be atomic. Use existing lock (_lock) or create a dedicated lock for '_instance'.

--------------------------------------------------------------------------------

227. [CRITICAL] is_valid
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:57

   Description:
     Shared bool 'is_valid' in class 'LifecycleState'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 181: write
     - Line 183: write

   Suggestion:
     Add lock protection around all accesses to 'is_valid'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

228. [CRITICAL] is_executing
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:59

   Description:
     Shared bool 'is_executing' in class 'LifecycleState'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 243: write
     - Line 269: write

   Suggestion:
     Add lock protection around all accesses to 'is_executing'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

229. [CRITICAL] error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:61

   Description:
     Shared unknown 'error' in class 'LifecycleState'. has 6 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 13 total

   Suggestion:
     Protect check-then-act pattern on 'error' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

230. [CRITICAL] tags
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_registry.py:25

   Description:
     Shared unknown 'tags' in class 'ActionMetadata'. has 3 unprotected write operations (write-write race). Locks available but not used: ['_lock', '_anonymous'].

   Patterns Detected:
     - check-then-act

   Access Locations: 25 total

   Suggestion:
     Protect check-then-act pattern on 'tags' with a lock. The check and act operations must be atomic. Use existing lock (_lock) or create a dedicated lock for 'tags'.

--------------------------------------------------------------------------------

231. [CRITICAL] factory
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_registry.py:26

   Description:
     Shared unknown 'factory' in class 'ActionMetadata'. has 1 unprotected write and 2 unprotected reads (read-write race). Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (3):
     - Line 277: read
     - Line 278: read
     - Line 373: write

   Suggestion:
     Add lock protection around all accesses to 'factory'. Multiple threads are writing to this state simultaneously. Use existing lock (_lock) or create a dedicated lock for 'factory'.

--------------------------------------------------------------------------------

232. [CRITICAL] _instance
   Type: NoneType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_registry.py:46

   Description:
     Shared NoneType '_instance' in class 'ActionRegistry'. has 1 unprotected write and 3 unprotected reads (read-write race). Locks available but not used: ['_lock', '_anonymous'].

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 51: read
     - Line 53: read
     - Line 54: write
     - Line 55: read

   Suggestion:
     Protect check-then-act pattern on '_instance' with a lock. The check and act operations must be atomic. Use existing lock (_lock) or create a dedicated lock for '_instance'.

--------------------------------------------------------------------------------

233. [CRITICAL] masks
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/analysis/histogram/histogram_region.py:30

   Description:
     Shared list 'masks' in class 'HistogramRegion'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 51: read
     - Line 59: write

   Suggestion:
     Add lock protection around all accesses to 'masks'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

234. [CRITICAL] histograms
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/analysis/histogram/histogram_region.py:35

   Description:
     Shared list 'histograms' in class 'HistogramRegion'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 67: read
     - Line 75: write

   Suggestion:
     Add lock protection around all accesses to 'histograms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

235. [CRITICAL] histogram
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/analysis/histogram/histogram_region.py:40

   Description:
     Shared Optional 'histogram' in class 'HistogramRegion'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 83: read
     - Line 91: write

   Suggestion:
     Add lock protection around all accesses to 'histogram'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

236. [CRITICAL] workflow
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/routers/execution_router.py:44

   Description:
     Shared dict 'workflow' in class 'WorkflowExecutionRequest'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 121: read
     - Line 122: write
     - Line 142: read
     - Line 143: read

   Suggestion:
     Protect check-then-act pattern on 'workflow' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

237. [CRITICAL] options
   Type: ExecutionOptionsRequest
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/routers/execution_router.py:45

   Description:
     Shared ExecutionOptionsRequest 'options' in class 'WorkflowExecutionRequest'. has 1 unprotected write and 6 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (7):
     - Line 125: write
     - Line 126: read
     - Line 127: read
     - Line 128: read
     - Line 129: read
     - Line 130: read
     - Line 131: read

   Suggestion:
     Add lock protection around all accesses to 'options'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

238. [CRITICAL] status
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/routers/execution_router.py:55

   Description:
     Shared str 'status' in class 'ExecutionHandleResponse'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 138: write
     - Line 144: read
     - Line 145: read
     - Line 171: write

   Suggestion:
     Add lock protection around all accesses to 'status'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

239. [CRITICAL] status
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/routers/execution_router.py:64

   Description:
     Shared str 'status' in class 'ExecutionStatusResponse'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 138: write
     - Line 144: read
     - Line 145: read
     - Line 171: write

   Suggestion:
     Add lock protection around all accesses to 'status'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

240. [CRITICAL] end_time
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/collect_data.py:26

   Description:
     Shared float 'end_time' in class 'CollectedData'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 150: write
     - Line 151: read

   Suggestion:
     Add lock protection around all accesses to 'end_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

241. [CRITICAL] duration_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/collect_data.py:29

   Description:
     Shared float 'duration_ms' in class 'CollectedData'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 151: write
     - Line 159: read

   Suggestion:
     Add lock protection around all accesses to 'duration_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

242. [CRITICAL] result
   Type: Any
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/collect_data.py:38

   Description:
     Shared Any 'result' in class 'CollectedData'. has 6 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 135: write
     - Line 139: write
     - Line 218: write
     - Line 222: write
     - Line 226: write
     - Line 230: write

   Suggestion:
     Add lock protection around all accesses to 'result'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

243. [CRITICAL] exception
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/collect_data.py:41

   Description:
     Shared unknown 'exception' in class 'CollectedData'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 57: read
     - Line 145: write

   Suggestion:
     Add lock protection around all accesses to 'exception'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

244. [CRITICAL] tags
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/monitored.py:35

   Description:
     Shared unknown 'tags' in class 'MonitoredConfig'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 48: read
     - Line 49: write
     - Line 232: read

   Suggestion:
     Protect check-then-act pattern on 'tags' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

245. [CRITICAL] custom_metrics
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/monitored.py:44

   Description:
     Shared unknown 'custom_metrics' in class 'MonitoredConfig'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 50: read
     - Line 51: write
     - Line 235: read

   Suggestion:
     Protect check-then-act pattern on 'custom_metrics' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

246. [CRITICAL] end_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/core/action_lifecycle_aspect.py:38

   Description:
     Shared unknown 'end_time' in class 'ActionContext'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 53: read
     - Line 55: read
     - Line 222: write

   Suggestion:
     Add lock protection around all accesses to 'end_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

247. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/core/action_lifecycle_aspect.py:41

   Description:
     Shared bool 'success' in class 'ActionContext'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 150: write
     - Line 159: write
     - Line 266: read

   Suggestion:
     Add lock protection around all accesses to 'success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

248. [CRITICAL] error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/core/action_lifecycle_aspect.py:44

   Description:
     Shared unknown 'error' in class 'ActionContext'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 160: write
     - Line 232: read
     - Line 234: read

   Suggestion:
     Add lock protection around all accesses to 'error'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

249. [CRITICAL] total_calls
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/performance_monitoring_aspect.py:27

   Description:
     Shared int 'total_calls' in class 'MethodPerformanceStats'. has 2 unprotected write operations (write-write race). Locks available but not used: ['_stats_lock', '_anonymous'].

   Access Locations (9):
     - Line 51: read
     - Line 53: read
     - Line 58: read
     - Line 60: read
     - Line 60: read
     - Line 85: read_write
     - Line 325: write
     - Line 325: read
     - Line 350: read

   Suggestion:
     Add lock protection around all accesses to 'total_calls'. Multiple threads are writing to this state simultaneously. Use existing lock (_stats_lock) or create a dedicated lock for 'total_calls'.

--------------------------------------------------------------------------------

250. [CRITICAL] total_time_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/performance_monitoring_aspect.py:30

   Description:
     Shared float 'total_time_ms' in class 'MethodPerformanceStats'. has 1 unprotected write and 2 unprotected reads (read-write race). Locks available but not used: ['_stats_lock', '_anonymous'].

   Access Locations (3):
     - Line 53: read
     - Line 86: read_write
     - Line 326: read

   Suggestion:
     Add lock protection around all accesses to 'total_time_ms'. Multiple threads are writing to this state simultaneously. Use existing lock (_stats_lock) or create a dedicated lock for 'total_time_ms'.

--------------------------------------------------------------------------------

251. [CRITICAL] min_time_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/performance_monitoring_aspect.py:33

   Description:
     Shared float 'min_time_ms' in class 'MethodPerformanceStats'. has 1 unprotected write and 1 unprotected reads (read-write race). Locks available but not used: ['_stats_lock', '_anonymous'].

   Access Locations (2):
     - Line 87: write
     - Line 87: read

   Suggestion:
     Add lock protection around all accesses to 'min_time_ms'. Multiple threads are writing to this state simultaneously. Use existing lock (_stats_lock) or create a dedicated lock for 'min_time_ms'.

--------------------------------------------------------------------------------

252. [CRITICAL] max_time_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/performance_monitoring_aspect.py:36

   Description:
     Shared float 'max_time_ms' in class 'MethodPerformanceStats'. has 1 unprotected write and 1 unprotected reads (read-write race). Locks available but not used: ['_stats_lock', '_anonymous'].

   Access Locations (2):
     - Line 88: write
     - Line 88: read

   Suggestion:
     Add lock protection around all accesses to 'max_time_ms'. Multiple threads are writing to this state simultaneously. Use existing lock (_stats_lock) or create a dedicated lock for 'max_time_ms'.

--------------------------------------------------------------------------------

253. [CRITICAL] error_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/performance_monitoring_aspect.py:45

   Description:
     Shared int 'error_count' in class 'MethodPerformanceStats'. has 1 unprotected write and 2 unprotected reads (read-write race). Locks available but not used: ['_stats_lock', '_anonymous'].

   Access Locations (3):
     - Line 60: read
     - Line 93: read_write
     - Line 327: read

   Suggestion:
     Add lock protection around all accesses to 'error_count'. Multiple threads are writing to this state simultaneously. Use existing lock (_stats_lock) or create a dedicated lock for 'error_count'.

--------------------------------------------------------------------------------

254. [CRITICAL] total_attempts
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:27

   Description:
     Shared int 'total_attempts' in class 'TransitionStats'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 51: read
     - Line 53: read
     - Line 270: read_write
     - Line 405: read

   Suggestion:
     Add lock protection around all accesses to 'total_attempts'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

255. [CRITICAL] successful_transitions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:30

   Description:
     Shared int 'successful_transitions' in class 'TransitionStats'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 53: read
     - Line 58: read
     - Line 60: read
     - Line 287: read_write

   Suggestion:
     Add lock protection around all accesses to 'successful_transitions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

256. [CRITICAL] total_time_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:36

   Description:
     Shared float 'total_time_ms' in class 'TransitionStats'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 60: read
     - Line 288: read_write

   Suggestion:
     Add lock protection around all accesses to 'total_time_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

257. [CRITICAL] min_time_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:39

   Description:
     Shared float 'min_time_ms' in class 'TransitionStats'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 289: write
     - Line 289: read

   Suggestion:
     Add lock protection around all accesses to 'min_time_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

258. [CRITICAL] max_time_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:42

   Description:
     Shared float 'max_time_ms' in class 'TransitionStats'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 290: write
     - Line 290: read

   Suggestion:
     Add lock protection around all accesses to 'max_time_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

259. [CRITICAL] visit_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:70

   Description:
     Shared int 'visit_count' in class 'StateNode'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 94: read
     - Line 96: read
     - Line 322: read_write
     - Line 399: read

   Suggestion:
     Add lock protection around all accesses to 'visit_count'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

260. [CRITICAL] total_time_in_state_ms
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:73

   Description:
     Shared float 'total_time_in_state_ms' in class 'StateNode'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 96: read
     - Line 337: read_write

   Suggestion:
     Add lock protection around all accesses to 'total_time_in_state_ms'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

261. [CRITICAL] entry_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:76

   Description:
     Shared unknown 'entry_time' in class 'StateNode'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 323: write
     - Line 335: read
     - Line 336: read
     - Line 338: write

   Suggestion:
     Protect check-then-act pattern on 'entry_time' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

262. [CRITICAL] failure_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/recovery/error_recovery_aspect.py:407

   Description:
     Shared int 'failure_count' in class 'CircuitBreaker'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 437: write
     - Line 441: read_write
     - Line 444: read

   Suggestion:
     Add lock protection around all accesses to 'failure_count'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

263. [CRITICAL] last_failure_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/recovery/error_recovery_aspect.py:410

   Description:
     Shared unknown 'last_failure_time' in class 'CircuitBreaker'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 426: read
     - Line 427: read
     - Line 442: write

   Suggestion:
     Add lock protection around all accesses to 'last_failure_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

264. [CRITICAL] state
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/recovery/error_recovery_aspect.py:413

   Description:
     Shared str 'state' in class 'CircuitBreaker'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (7):
     - Line 422: read
     - Line 426: read
     - Line 428: write
     - Line 431: read
     - Line 435: read
     - Line 436: write
     - Line 445: write

   Suggestion:
     Protect check-then-act pattern on 'state' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

265. [CRITICAL] logger
   Type: getLogger
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/hooks/logging_hooks.py:12

   Description:
     Module-level getLogger 'logger'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (6):
     - Line 37: write
     - Line 47: read
     - Line 50: read
     - Line 57: read
     - Line 60: read
     - Line 64: read

   Suggestion:
     Add lock protection around all accesses to 'logger'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

266. [CRITICAL] records
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_history.py:47

   Description:
     Shared list 'records' in class 'ActionHistory'. has 9 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 25 total

   Suggestion:
     Protect check-then-act pattern on 'records' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

267. [CRITICAL] action_config
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:48

   Description:
     Shared unknown 'action_config' in class 'ActionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 118: read
     - Line 121: read
     - Line 149: read
     - Line 176: read
     - Line 202: write
     - Line 221: write
     - Line 317: read

   Suggestion:
     Add lock protection around all accesses to 'action_config'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

268. [CRITICAL] match_list
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:49

   Description:
     Shared list 'match_list' in class 'ActionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 14 total

   Suggestion:
     Add lock protection around all accesses to 'match_list'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

269. [CRITICAL] text
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:50

   Description:
     Shared str 'text' in class 'ActionRecord'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (10):
     - Line 64: read
     - Line 88: write
     - Line 110: read
     - Line 110: read
     - Line 159: read
     - Line 160: read
     - Line 178: read
     - Line 204: write
     - Line 257: write
     - Line 319: read

   Suggestion:
     Add lock protection around all accesses to 'text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

270. [CRITICAL] duration
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:51

   Description:
     Shared float 'duration' in class 'ActionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 170: read
     - Line 179: read
     - Line 205: write
     - Line 269: write
     - Line 320: read

   Suggestion:
     Add lock protection around all accesses to 'duration'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

271. [CRITICAL] timestamp
   Type: datetime
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:52

   Description:
     Shared datetime 'timestamp' in class 'ActionRecord'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 147: read
     - Line 180: read
     - Line 206: write
     - Line 321: read

   Suggestion:
     Add lock protection around all accesses to 'timestamp'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

272. [CRITICAL] action_success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:53

   Description:
     Shared bool 'action_success' in class 'ActionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 169: read
     - Line 181: read
     - Line 207: write
     - Line 281: write
     - Line 322: read

   Suggestion:
     Add lock protection around all accesses to 'action_success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

273. [CRITICAL] result_success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:54

   Description:
     Shared bool 'result_success' in class 'ActionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 182: read
     - Line 208: write
     - Line 293: write
     - Line 323: read

   Suggestion:
     Add lock protection around all accesses to 'result_success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

274. [CRITICAL] state_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:55

   Description:
     Shared str 'state_name' in class 'ActionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 183: read
     - Line 209: write
     - Line 306: write
     - Line 324: read

   Suggestion:
     Add lock protection around all accesses to 'state_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

275. [CRITICAL] state_id
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/action/action_record.py:56

   Description:
     Shared int 'state_id' in class 'ActionRecord'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 184: read
     - Line 210: write
     - Line 307: write
     - Line 325: read

   Suggestion:
     Add lock protection around all accesses to 'state_id'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

276. [CRITICAL] red
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/color.py:20

   Description:
     Shared int 'red' in class 'RGB'. has 1 unprotected write and 11 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 12 total

   Suggestion:
     Add lock protection around all accesses to 'red'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

277. [CRITICAL] green
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/color.py:23

   Description:
     Shared int 'green' in class 'RGB'. has 1 unprotected write and 11 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 12 total

   Suggestion:
     Add lock protection around all accesses to 'green'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

278. [CRITICAL] blue
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/color.py:26

   Description:
     Shared int 'blue' in class 'RGB'. has 1 unprotected write and 11 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 12 total

   Suggestion:
     Add lock protection around all accesses to 'blue'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

279. [CRITICAL] hue
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/color.py:126

   Description:
     Shared int 'hue' in class 'HSV'. has 1 unprotected write and 15 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 16 total

   Suggestion:
     Add lock protection around all accesses to 'hue'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

280. [CRITICAL] saturation
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/color.py:129

   Description:
     Shared int 'saturation' in class 'HSV'. has 1 unprotected write and 13 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 14 total

   Suggestion:
     Add lock protection around all accesses to 'saturation'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

281. [CRITICAL] value
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/color.py:132

   Description:
     Shared int 'value' in class 'HSV'. has 1 unprotected write and 13 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 14 total

   Suggestion:
     Add lock protection around all accesses to 'value'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

282. [CRITICAL] state_anchors
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/cross_state_anchor.py:42

   Description:
     Shared dict 'state_anchors' in class 'CrossStateAnchor'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 20 total

   Suggestion:
     Add lock protection around all accesses to 'state_anchors'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

283. [CRITICAL] primary_object
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/cross_state_anchor.py:45

   Description:
     Shared unknown 'primary_object' in class 'CrossStateAnchor'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 87: write
     - Line 231: read
     - Line 231: read
     - Line 232: write
     - Line 232: read
     - Line 243: read

   Suggestion:
     Protect check-then-act pattern on 'primary_object' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

284. [CRITICAL] default_anchor
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/cross_state_anchor.py:48

   Description:
     Shared unknown 'default_anchor' in class 'CrossStateAnchor'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 11 total

   Suggestion:
     Protect check-then-act pattern on 'default_anchor' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

285. [CRITICAL] strict_mode
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/cross_state_anchor.py:51

   Description:
     Shared bool 'strict_mode' in class 'CrossStateAnchor'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 111: write
     - Line 129: read
     - Line 245: read
     - Line 252: read
     - Line 260: read

   Suggestion:
     Add lock protection around all accesses to 'strict_mode'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

286. [CRITICAL] region
   Type: Region
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/grid.py:42

   Description:
     Shared Region 'region' in class 'Grid'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 20 total

   Suggestion:
     Protect check-then-act pattern on 'region' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

287. [CRITICAL] cell_width
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/grid.py:43

   Description:
     Shared int 'cell_width' in class 'Grid'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 16 total

   Suggestion:
     Protect check-then-act pattern on 'cell_width' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

288. [CRITICAL] cell_height
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/grid.py:44

   Description:
     Shared int 'cell_height' in class 'Grid'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 16 total

   Suggestion:
     Add lock protection around all accesses to 'cell_height'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

289. [CRITICAL] rows
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/grid.py:45

   Description:
     Shared int 'rows' in class 'Grid'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 17 total

   Suggestion:
     Protect check-then-act pattern on 'rows' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

290. [CRITICAL] cols
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/grid.py:46

   Description:
     Shared int 'cols' in class 'Grid'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 20 total

   Suggestion:
     Protect check-then-act pattern on 'cols' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

291. [CRITICAL] name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/image.py:51

   Description:
     Shared unknown 'name' in class 'Image'. has 1 unprotected write and 11 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 12 total

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

292. [CRITICAL] _pil_image
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/image.py:54

   Description:
     Shared unknown '_pil_image' in class 'Image'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 27 total

   Suggestion:
     Protect check-then-act pattern on '_pil_image' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

293. [CRITICAL] x
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/location.py:74

   Description:
     Shared int 'x' in class 'Location'. has 1 unprotected write and 10 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 11 total

   Suggestion:
     Protect check-then-act pattern on 'x' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

294. [CRITICAL] y
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/location.py:77

   Description:
     Shared int 'y' in class 'Location'. has 1 unprotected write and 10 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 11 total

   Suggestion:
     Protect check-then-act pattern on 'y' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

295. [CRITICAL] target_position
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:49

   Description:
     Shared unknown 'target_position' in class 'MatchAdjustmentOptions'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 84: write
     - Line 222: read
     - Line 241: read
     - Line 242: read
     - Line 253: read

   Suggestion:
     Add lock protection around all accesses to 'target_position'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

296. [CRITICAL] target_offset
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:53

   Description:
     Shared unknown 'target_offset' in class 'MatchAdjustmentOptions'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 96: write
     - Line 223: read
     - Line 243: read
     - Line 244: read
     - Line 253: read

   Suggestion:
     Add lock protection around all accesses to 'target_offset'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

297. [CRITICAL] add_w
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:56

   Description:
     Shared int 'add_w' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 108: write
     - Line 194: write
     - Line 209: write
     - Line 224: read
     - Line 237: read
     - Line 238: read
     - Line 251: read

   Suggestion:
     Add lock protection around all accesses to 'add_w'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

298. [CRITICAL] add_h
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:59

   Description:
     Shared int 'add_h' in class 'MatchAdjustmentOptions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 120: write
     - Line 195: write
     - Line 210: write
     - Line 225: read
     - Line 237: read
     - Line 238: read
     - Line 251: read

   Suggestion:
     Add lock protection around all accesses to 'add_h'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

299. [CRITICAL] absolute_w
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:63

   Description:
     Shared int 'absolute_w' in class 'MatchAdjustmentOptions'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 132: write
     - Line 226: read
     - Line 239: read
     - Line 240: read
     - Line 252: read

   Suggestion:
     Add lock protection around all accesses to 'absolute_w'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

300. [CRITICAL] absolute_h
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:67

   Description:
     Shared int 'absolute_h' in class 'MatchAdjustmentOptions'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 144: write
     - Line 227: read
     - Line 239: read
     - Line 240: read
     - Line 252: read

   Suggestion:
     Add lock protection around all accesses to 'absolute_h'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

301. [CRITICAL] add_x
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:70

   Description:
     Shared int 'add_x' in class 'MatchAdjustmentOptions'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 156: write
     - Line 181: write
     - Line 196: write
     - Line 211: write
     - Line 228: read
     - Line 235: read
     - Line 236: read
     - Line 250: read

   Suggestion:
     Add lock protection around all accesses to 'add_x'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

302. [CRITICAL] add_y
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/match_adjustment_options.py:73

   Description:
     Shared int 'add_y' in class 'MatchAdjustmentOptions'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 168: write
     - Line 182: write
     - Line 197: write
     - Line 212: write
     - Line 229: read
     - Line 235: read
     - Line 236: read
     - Line 250: read

   Suggestion:
     Add lock protection around all accesses to 'add_y'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

303. [CRITICAL] width
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/pattern.py:46

   Description:
     Shared unknown 'width' in class 'Pattern'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 92: read
     - Line 93: write
     - Line 197: read

   Suggestion:
     Protect check-then-act pattern on 'width' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

304. [CRITICAL] height
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/pattern.py:47

   Description:
     Shared unknown 'height' in class 'Pattern'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 94: read
     - Line 95: write
     - Line 198: read

   Suggestion:
     Protect check-then-act pattern on 'height' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

305. [CRITICAL] similarity
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/pattern.py:61

   Description:
     Shared unknown 'similarity' in class 'Pattern'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 204: read
     - Line 331: read
     - Line 332: read
     - Line 350: write

   Suggestion:
     Add lock protection around all accesses to 'similarity'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

306. [CRITICAL] search_regions
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/pattern.py:71

   Description:
     Shared unknown 'search_regions' in class 'Pattern'. has 1 unprotected write and 9 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (10):
     - Line 104: read
     - Line 105: write
     - Line 362: read
     - Line 371: read
     - Line 375: read
     - Line 383: read
     - Line 394: read
     - Line 404: read
     - Line 416: read
     - Line 424: read

   Suggestion:
     Protect check-then-act pattern on 'search_regions' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

307. [CRITICAL] percent_w
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/position.py:109

   Description:
     Shared float 'percent_w' in class 'Position'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 153: read_write
     - Line 169: read_write
     - Line 185: read
     - Line 189: read
     - Line 193: read

   Suggestion:
     Add lock protection around all accesses to 'percent_w'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

308. [CRITICAL] percent_h
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/position.py:112

   Description:
     Shared float 'percent_h' in class 'Position'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 161: read_write
     - Line 177: read_write
     - Line 185: read
     - Line 189: read
     - Line 193: read

   Suggestion:
     Add lock protection around all accesses to 'percent_h'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

309. [CRITICAL] width
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/region.py:48

   Description:
     Shared int 'width' in class 'Region'. has 1 unprotected write and 15 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 16 total

   Suggestion:
     Protect check-then-act pattern on 'width' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

310. [CRITICAL] height
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/region.py:51

   Description:
     Shared int 'height' in class 'Region'. has 1 unprotected write and 15 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 16 total

   Suggestion:
     Protect check-then-act pattern on 'height' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

311. [CRITICAL] pattern
   Type: Pattern
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/scene.py:38

   Description:
     Shared Pattern 'pattern' in class 'Scene'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 13 total

   Suggestion:
     Add lock protection around all accesses to 'pattern'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

312. [CRITICAL] id
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/scene.py:39

   Description:
     Shared int 'id' in class 'Scene'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 60: write
     - Line 91: read
     - Line 95: read

   Suggestion:
     Add lock protection around all accesses to 'id'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

313. [CRITICAL] target_type
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/search_region_on_object.py:48

   Description:
     Shared unknown 'target_type' in class 'SearchRegionOnObject'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 68: write
     - Line 114: read
     - Line 122: read
     - Line 122: read
     - Line 132: read

   Suggestion:
     Add lock protection around all accesses to 'target_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

314. [CRITICAL] target_state_name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/search_region_on_object.py:51

   Description:
     Shared unknown 'target_state_name' in class 'SearchRegionOnObject'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 80: write
     - Line 115: read
     - Line 125: read
     - Line 133: read

   Suggestion:
     Add lock protection around all accesses to 'target_state_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

315. [CRITICAL] target_object_name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/search_region_on_object.py:54

   Description:
     Shared unknown 'target_object_name' in class 'SearchRegionOnObject'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 92: write
     - Line 116: read
     - Line 126: read
     - Line 134: read

   Suggestion:
     Add lock protection around all accesses to 'target_object_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

316. [CRITICAL] adjustments
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/element/search_region_on_object.py:57

   Description:
     Shared unknown 'adjustments' in class 'SearchRegionOnObject'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 104: write
     - Line 117: read
     - Line 135: read

   Suggestion:
     Add lock protection around all accesses to 'adjustments'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

317. [CRITICAL] state_object_data
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:35

   Description:
     Shared unknown 'state_object_data' in class 'MatchMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 221: read
     - Line 248: write
     - Line 379: write
     - Line 433: read

   Suggestion:
     Add lock protection around all accesses to 'state_object_data'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

318. [CRITICAL] scene
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:38

   Description:
     Shared unknown 'scene' in class 'MatchMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 223: read
     - Line 250: write
     - Line 403: write
     - Line 434: read
     - Line 452: read

   Suggestion:
     Add lock protection around all accesses to 'scene'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

319. [CRITICAL] histogram
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:47

   Description:
     Shared unknown 'histogram' in class 'MatchMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 222: read
     - Line 249: write
     - Line 391: write
     - Line 435: read

   Suggestion:
     Add lock protection around all accesses to 'histogram'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

320. [CRITICAL] target
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:86

   Description:
     Shared unknown 'target' in class 'Match'. has 8 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 19 total

   Suggestion:
     Protect check-then-act pattern on 'target' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

321. [CRITICAL] image
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:90

   Description:
     Shared unknown 'image' in class 'Match'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 214: read
     - Line 241: write
     - Line 241: read
     - Line 304: write
     - Line 443: read
     - Line 452: read

   Suggestion:
     Add lock protection around all accesses to 'image'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

322. [CRITICAL] search_image
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:93

   Description:
     Shared unknown 'search_image' in class 'Match'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 215: read
     - Line 242: write
     - Line 242: read
     - Line 355: write
     - Line 444: read

   Suggestion:
     Add lock protection around all accesses to 'search_image'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

323. [CRITICAL] name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:96

   Description:
     Shared str 'name' in class 'Match'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (9):
     - Line 179: read
     - Line 179: read
     - Line 186: read
     - Line 216: read
     - Line 243: write
     - Line 243: read
     - Line 243: read
     - Line 331: write
     - Line 445: read

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

324. [CRITICAL] ocr_text
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:99

   Description:
     Shared str 'ocr_text' in class 'Match'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (9):
     - Line 180: read
     - Line 180: read
     - Line 186: read
     - Line 217: read
     - Line 244: write
     - Line 244: read
     - Line 244: read
     - Line 343: write
     - Line 446: read

   Suggestion:
     Add lock protection around all accesses to 'ocr_text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

325. [CRITICAL] anchors
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:102

   Description:
     Shared unknown 'anchors' in class 'Match'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 218: read
     - Line 245: write
     - Line 245: read
     - Line 367: write
     - Line 447: read

   Suggestion:
     Add lock protection around all accesses to 'anchors'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

326. [CRITICAL] metadata
   Type: MatchMetadata
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:106

   Description:
     Shared MatchMetadata 'metadata' in class 'Match'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 157: read
     - Line 248: read
     - Line 249: read
     - Line 250: read
     - Line 432: write

   Suggestion:
     Add lock protection around all accesses to 'metadata'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

327. [CRITICAL] snapshots
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/action_history.py:26

   Description:
     Shared list 'snapshots' in class 'ActionHistory'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 22 total

   Suggestion:
     Protect check-then-act pattern on 'snapshots' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

328. [CRITICAL] last_updated
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/action_history.py:27

   Description:
     Shared unknown 'last_updated' in class 'ActionHistory'. has 6 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 32: write
     - Line 43: write
     - Line 127: write
     - Line 141: read
     - Line 141: read
     - Line 148: write
     - Line 150: write
     - Line 157: write

   Suggestion:
     Add lock protection around all accesses to 'last_updated'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

329. [CRITICAL] region
   Type: Region
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/action_snapshot.py:33

   Description:
     Shared Region 'region' in class 'MatchResult'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 41: read
     - Line 42: read
     - Line 43: read
     - Line 44: read
     - Line 54: write

   Suggestion:
     Add lock protection around all accesses to 'region'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

330. [CRITICAL] _states
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/initial_states.py:31

   Description:
     Shared dict '_states' in class 'InitialStates'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 11 total

   Suggestion:
     Add lock protection around all accesses to '_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

331. [CRITICAL] _default_state
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/initial_states.py:37

   Description:
     Shared unknown '_default_state' in class 'InitialStates'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 14 total

   Suggestion:
     Protect check-then-act pattern on '_default_state' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

332. [CRITICAL] states
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path.py:21

   Description:
     Shared list 'states' in class 'Path'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 58 total

   Suggestion:
     Add lock protection around all accesses to 'states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

333. [CRITICAL] transitions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path.py:22

   Description:
     Shared list 'transitions' in class 'Path'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 23 total

   Suggestion:
     Protect check-then-act pattern on 'transitions' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

334. [CRITICAL] _score
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path.py:25

   Description:
     Shared float '_score' in class 'Path'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 206: write
     - Line 209: read_write
     - Line 209: read
     - Line 224: read
     - Line 303: read

   Suggestion:
     Add lock protection around all accesses to '_score'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

335. [CRITICAL] _probability
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path.py:26

   Description:
     Shared float '_probability' in class 'Path'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 213: write
     - Line 216: read_write
     - Line 216: read
     - Line 232: read
     - Line 303: read

   Suggestion:
     Add lock protection around all accesses to '_probability'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

336. [CRITICAL] _length
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path.py:27

   Description:
     Shared int '_length' in class 'Path'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 35: write
     - Line 51: write
     - Line 154: write
     - Line 240: read
     - Line 299: read

   Suggestion:
     Add lock protection around all accesses to '_length'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

337. [CRITICAL] states
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path_finder.py:22

   Description:
     Shared dict 'states' in class 'PathFinder'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 21 total

   Suggestion:
     Add lock protection around all accesses to 'states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

338. [CRITICAL] _max_depth
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path_finder.py:25

   Description:
     Shared int '_max_depth' in class 'PathFinder'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 130: read
     - Line 202: read
     - Line 283: read
     - Line 378: write

   Suggestion:
     Add lock protection around all accesses to '_max_depth'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

339. [CRITICAL] _use_probability
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path_finder.py:26

   Description:
     Shared bool '_use_probability' in class 'PathFinder'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 63: read
     - Line 67: read
     - Line 241: write
     - Line 243: write
     - Line 391: write

   Suggestion:
     Add lock protection around all accesses to '_use_probability'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

340. [CRITICAL] _use_score
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path_finder.py:27

   Description:
     Shared bool '_use_score' in class 'PathFinder'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 63: read
     - Line 65: read
     - Line 256: write
     - Line 258: write
     - Line 404: write

   Suggestion:
     Add lock protection around all accesses to '_use_score'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

341. [CRITICAL] _allow_loops
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path_finder.py:28

   Description:
     Shared bool '_allow_loops' in class 'PathFinder'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 150: read
     - Line 303: read
     - Line 417: write

   Suggestion:
     Add lock protection around all accesses to '_allow_loops'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

342. [CRITICAL] _path_cache
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/path_finder.py:31

   Description:
     Shared dict '_path_cache' in class 'PathFinder'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 59: read
     - Line 60: read
     - Line 60: read
     - Line 74: write
     - Line 74: write
     - Line 74: read
     - Line 423: read
     - Line 427: read

   Suggestion:
     Add lock protection around all accesses to '_path_cache'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

343. [CRITICAL] name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state.py:72

   Description:
     Shared str 'name' in class 'State'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 398: read
     - Line 415: write
     - Line 594: read

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

344. [CRITICAL] description
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state.py:75

   Description:
     Shared str 'description' in class 'State'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 416: write
     - Line 441: write
     - Line 594: read

   Suggestion:
     Add lock protection around all accesses to 'description'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

345. [CRITICAL] _visibility
   Type: StateVisibilityManager
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state.py:91

   Description:
     Shared StateVisibilityManager '_visibility' in class 'State'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 13 total

   Suggestion:
     Protect check-then-act pattern on '_visibility' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

346. [CRITICAL] _metrics
   Type: StateMetricsManager
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state.py:94

   Description:
     Shared StateMetricsManager '_metrics' in class 'State'. has 8 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 27 total

   Suggestion:
     Protect check-then-act pattern on '_metrics' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

347. [CRITICAL] name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_image.py:29

   Description:
     Shared unknown 'name' in class 'StateImage'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 62: read
     - Line 64: write
     - Line 66: write
     - Line 257: read
     - Line 298: read
     - Line 302: read

   Suggestion:
     Protect check-then-act pattern on 'name' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

348. [CRITICAL] _fixed
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_image.py:33

   Description:
     Shared bool '_fixed' in class 'StateImage'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 149: write
     - Line 220: read
     - Line 302: read

   Suggestion:
     Add lock protection around all accesses to '_fixed'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

349. [CRITICAL] _shared
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_image.py:34

   Description:
     Shared bool '_shared' in class 'StateImage'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 161: write
     - Line 225: read
     - Line 302: read

   Suggestion:
     Add lock protection around all accesses to '_shared'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

350. [CRITICAL] _probability
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_image.py:35

   Description:
     Shared float '_probability' in class 'StateImage'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 173: write
     - Line 230: read

   Suggestion:
     Add lock protection around all accesses to '_probability'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

351. [CRITICAL] _search_region
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_image.py:38

   Description:
     Shared unknown '_search_region' in class 'StateImage'. has 1 unprotected write and 10 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 11 total

   Suggestion:
     Add lock protection around all accesses to '_search_region'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

352. [CRITICAL] _search_regions
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_image.py:39

   Description:
     Shared unknown '_search_regions' in class 'StateImage'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (6):
     - Line 97: read
     - Line 98: read
     - Line 130: read
     - Line 131: read
     - Line 209: write
     - Line 215: read

   Suggestion:
     Add lock protection around all accesses to '_search_regions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

353. [CRITICAL] _similarity
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_image.py:40

   Description:
     Shared float '_similarity' in class 'StateImage'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (6):
     - Line 80: read
     - Line 102: read
     - Line 102: read
     - Line 135: read
     - Line 135: read
     - Line 197: write

   Suggestion:
     Add lock protection around all accesses to '_similarity'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

354. [CRITICAL] name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_location.py:28

   Description:
     Shared unknown 'name' in class 'StateLocation'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 43: read
     - Line 44: write
     - Line 123: read
     - Line 153: read

   Suggestion:
     Protect check-then-act pattern on 'name' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

355. [CRITICAL] _anchor
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_location.py:32

   Description:
     Shared bool '_anchor' in class 'StateLocation'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 92: write
     - Line 110: read

   Suggestion:
     Add lock protection around all accesses to '_anchor'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

356. [CRITICAL] _fixed
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_location.py:33

   Description:
     Shared bool '_fixed' in class 'StateLocation'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 104: write
     - Line 115: read

   Suggestion:
     Add lock protection around all accesses to '_fixed'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

357. [CRITICAL] _state_history
   Type: deque
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_memory.py:27

   Description:
     Shared deque '_state_history' in class 'StateMemory'. has 1 unprotected write and 11 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 12 total

   Suggestion:
     Add lock protection around all accesses to '_state_history'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

358. [CRITICAL] _transition_history
   Type: deque
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_memory.py:28

   Description:
     Shared deque '_transition_history' in class 'StateMemory'. has 1 unprotected write and 11 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 12 total

   Suggestion:
     Add lock protection around all accesses to '_transition_history'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

359. [CRITICAL] _total_states_recorded
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_memory.py:35

   Description:
     Shared int '_total_states_recorded' in class 'StateMemory'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 49: read_write
     - Line 188: read

   Suggestion:
     Add lock protection around all accesses to '_total_states_recorded'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

360. [CRITICAL] _total_transitions_recorded
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_memory.py:36

   Description:
     Shared int '_total_transitions_recorded' in class 'StateMemory'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 69: read_write
     - Line 189: read

   Suggestion:
     Add lock protection around all accesses to '_total_transitions_recorded'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

361. [CRITICAL] access_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_metadata_tracker.py:21

   Description:
     Shared int 'access_count' in class 'StateMetadata'. has 1 unprotected write and 2 unprotected reads (read-write race). Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (3):
     - Line 71: read_write
     - Line 127: read
     - Line 236: read

   Suggestion:
     Add lock protection around all accesses to 'access_count'. Multiple threads are writing to this state simultaneously. Use existing lock (_lock) or create a dedicated lock for 'access_count'.

--------------------------------------------------------------------------------

362. [CRITICAL] transition_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_metadata_tracker.py:22

   Description:
     Shared int 'transition_count' in class 'StateMetadata'. has 1 unprotected write and 2 unprotected reads (read-write race). Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (3):
     - Line 83: read_write
     - Line 87: read
     - Line 140: read

   Suggestion:
     Add lock protection around all accesses to 'transition_count'. Multiple threads are writing to this state simultaneously. Use existing lock (_lock) or create a dedicated lock for 'transition_count'.

--------------------------------------------------------------------------------

363. [CRITICAL] average_duration
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_metadata_tracker.py:23

   Description:
     Shared float 'average_duration' in class 'StateMetadata'. has 1 unprotected write and 1 unprotected reads (read-write race). Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (2):
     - Line 88: write
     - Line 89: read

   Suggestion:
     Add lock protection around all accesses to 'average_duration'. Multiple threads are writing to this state simultaneously. Use existing lock (_lock) or create a dedicated lock for 'average_duration'.

--------------------------------------------------------------------------------

364. [CRITICAL] custom_data
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_metadata_tracker.py:26

   Description:
     Shared dict 'custom_data' in class 'StateMetadata'. has 2 unprotected write operations (write-write race). Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (3):
     - Line 205: read
     - Line 221: write
     - Line 221: write

   Suggestion:
     Add lock protection around all accesses to 'custom_data'. Multiple threads are writing to this state simultaneously. Use existing lock (_lock) or create a dedicated lock for 'custom_data'.

--------------------------------------------------------------------------------

365. [CRITICAL] state_object_id
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_object_metadata.py:50

   Description:
     Shared str 'state_object_id' in class 'StateObjectMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 63: write
     - Line 69: write
     - Line 81: read
     - Line 130: read
     - Line 137: read

   Suggestion:
     Add lock protection around all accesses to 'state_object_id'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

366. [CRITICAL] object_type
   Type: StateObjectType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_object_metadata.py:51

   Description:
     Shared StateObjectType 'object_type' in class 'StateObjectMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 64: write
     - Line 70: write
     - Line 89: read
     - Line 97: read
     - Line 105: read
     - Line 113: read
     - Line 129: read
     - Line 138: read

   Suggestion:
     Add lock protection around all accesses to 'object_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

367. [CRITICAL] state_object_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_object_metadata.py:52

   Description:
     Shared str 'state_object_name' in class 'StateObjectMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 65: write
     - Line 71: write
     - Line 129: read
     - Line 138: read

   Suggestion:
     Add lock protection around all accesses to 'state_object_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

368. [CRITICAL] owner_state_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_object_metadata.py:53

   Description:
     Shared str 'owner_state_name' in class 'StateObjectMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 66: write
     - Line 72: write
     - Line 124: read
     - Line 130: read
     - Line 139: read

   Suggestion:
     Add lock protection around all accesses to 'owner_state_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

369. [CRITICAL] owner_state_id
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_object_metadata.py:54

   Description:
     Shared unknown 'owner_state_id' in class 'StateObjectMetadata'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 67: write
     - Line 73: write
     - Line 131: read

   Suggestion:
     Add lock protection around all accesses to 'owner_state_id'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

370. [CRITICAL] name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_region.py:28

   Description:
     Shared unknown 'name' in class 'StateRegion'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 44: read
     - Line 45: write
     - Line 163: read
     - Line 194: read

   Suggestion:
     Protect check-then-act pattern on 'name' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

371. [CRITICAL] _fixed
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_region.py:32

   Description:
     Shared bool '_fixed' in class 'StateRegion'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 106: write
     - Line 136: read

   Suggestion:
     Add lock protection around all accesses to '_fixed'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

372. [CRITICAL] _search_region
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_region.py:33

   Description:
     Shared bool '_search_region' in class 'StateRegion'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 118: write
     - Line 141: read

   Suggestion:
     Add lock protection around all accesses to '_search_region'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

373. [CRITICAL] _interaction_region
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_region.py:34

   Description:
     Shared bool '_interaction_region' in class 'StateRegion'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 130: write
     - Line 146: read

   Suggestion:
     Add lock protection around all accesses to '_interaction_region'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

374. [CRITICAL] name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_string.py:26

   Description:
     Shared unknown 'name' in class 'StateString'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 40: read
     - Line 42: write
     - Line 206: read

   Suggestion:
     Protect check-then-act pattern on 'name' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

375. [CRITICAL] _identifier
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_string.py:30

   Description:
     Shared bool '_identifier' in class 'StateString'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 124: write
     - Line 166: read

   Suggestion:
     Add lock protection around all accesses to '_identifier'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

376. [CRITICAL] _input_text
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_string.py:31

   Description:
     Shared bool '_input_text' in class 'StateString'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 136: write
     - Line 171: read

   Suggestion:
     Add lock protection around all accesses to '_input_text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

377. [CRITICAL] _expected_text
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_string.py:32

   Description:
     Shared bool '_expected_text' in class 'StateString'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 148: write
     - Line 176: read

   Suggestion:
     Add lock protection around all accesses to '_expected_text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

378. [CRITICAL] _regex
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_string.py:33

   Description:
     Shared bool '_regex' in class 'StateString'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 92: read
     - Line 108: read
     - Line 160: write
     - Line 181: read

   Suggestion:
     Add lock protection around all accesses to '_regex'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

379. [CRITICAL] case_sensitive
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_text.py:32

   Description:
     Shared bool 'case_sensitive' in class 'StateText'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 63: read
     - Line 94: write
     - Line 143: read
     - Line 143: read
     - Line 156: read

   Suggestion:
     Add lock protection around all accesses to 'case_sensitive'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

380. [CRITICAL] exact_match
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_text.py:33

   Description:
     Shared bool 'exact_match' in class 'StateText'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 68: read
     - Line 106: write
     - Line 144: read
     - Line 144: read
     - Line 158: read

   Suggestion:
     Add lock protection around all accesses to 'exact_match'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

381. [CRITICAL] activation_groups
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_joint_table.py:36

   Description:
     Shared dict 'activation_groups' in class 'StateTransitionsJointTable'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 167: write
     - Line 167: write
     - Line 167: read
     - Line 183: read
     - Line 280: read
     - Line 296: read

   Suggestion:
     Add lock protection around all accesses to 'activation_groups'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

382. [CRITICAL] metadata
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:31

   Description:
     Shared dict 'metadata' in class 'TransitionContext'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 35: write
     - Line 35: write
     - Line 35: read
     - Line 39: read

   Suggestion:
     Add lock protection around all accesses to 'metadata'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

383. [CRITICAL] activated_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:47

   Description:
     Shared set 'activated_states' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 236: write
     - Line 317: write

   Suggestion:
     Add lock protection around all accesses to 'activated_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

384. [CRITICAL] deactivated_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:48

   Description:
     Shared set 'deactivated_states' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 237: write
     - Line 318: write

   Suggestion:
     Add lock protection around all accesses to 'deactivated_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

385. [CRITICAL] hidden_states
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:49

   Description:
     Shared set 'hidden_states' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 241: write
     - Line 322: write

   Suggestion:
     Add lock protection around all accesses to 'hidden_states'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

386. [CRITICAL] execution_time
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:51

   Description:
     Shared float 'execution_time' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 245: write
     - Line 326: write

   Suggestion:
     Add lock protection around all accesses to 'execution_time'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

387. [CRITICAL] metadata
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:52

   Description:
     Shared dict 'metadata' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 35: write
     - Line 35: write
     - Line 35: read
     - Line 39: read

   Suggestion:
     Add lock protection around all accesses to 'metadata'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

388. [CRITICAL] times_successful
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:98

   Description:
     Shared int 'times_successful' in class 'StateTransition'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (3):
     - Line 141: read
     - Line 144: read
     - Line 148: read_write

   Suggestion:
     Protect check-then-act pattern on 'times_successful' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

389. [CRITICAL] times_failed
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:99

   Description:
     Shared int 'times_failed' in class 'StateTransition'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 141: read
     - Line 152: read_write

   Suggestion:
     Add lock protection around all accesses to 'times_failed'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

390. [CRITICAL] name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:102

   Description:
     Shared str 'name' in class 'StateTransition'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 188: write
     - Line 188: read

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

391. [CRITICAL] name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/state_transitions.py:27

   Description:
     Shared unknown 'name' in class 'StateTransitions'. has 1 unprotected write and 7 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (8):
     - Line 90: read
     - Line 102: read
     - Line 118: read
     - Line 118: read
     - Line 184: read
     - Line 258: read
     - Line 271: write
     - Line 331: read

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

392. [CRITICAL] metadata
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/state_transitions.py:28

   Description:
     Shared dict 'metadata' in class 'StateTransitions'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 260: read
     - Line 320: write
     - Line 320: write
     - Line 320: read
     - Line 333: read

   Suggestion:
     Add lock protection around all accesses to 'metadata'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

393. [CRITICAL] state_name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/state_transitions.py:29

   Description:
     Shared unknown 'state_name' in class 'StateTransitions'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 37: read
     - Line 259: read
     - Line 283: write
     - Line 332: read

   Suggestion:
     Add lock protection around all accesses to 'state_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

394. [CRITICAL] transitions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/state_transitions_joint_table.py:24

   Description:
     Shared list 'transitions' in class 'TransitionEntry'. has 2 unprotected write operations (write-write race). Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (7):
     - Line 83: write
     - Line 90: read
     - Line 110: read
     - Line 152: read
     - Line 167: write
     - Line 237: read
     - Line 282: read

   Suggestion:
     Add lock protection around all accesses to 'transitions'. Multiple threads are writing to this state simultaneously. Use existing lock (_lock) or create a dedicated lock for 'transitions'.

--------------------------------------------------------------------------------

395. [CRITICAL] from_state
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/state_transition_service.py:22

   Description:
     Shared str 'from_state' in class 'TransitionRecord'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 65: write
     - Line 65: read

   Suggestion:
     Add lock protection around all accesses to 'from_state'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

396. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/state_transition_service.py:24

   Description:
     Shared bool 'success' in class 'TransitionRecord'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 194: write
     - Line 197: write
     - Line 200: write

   Suggestion:
     Add lock protection around all accesses to 'success'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

397. [CRITICAL] success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:30

   Description:
     Shared bool 'success' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (6):
     - Line 154: read
     - Line 156: write
     - Line 161: read
     - Line 295: read
     - Line 365: read
     - Line 366: write

   Suggestion:
     Protect check-then-act pattern on 'success' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

398. [CRITICAL] next_state
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:31

   Description:
     Shared unknown 'next_state' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 263: write
     - Line 265: write

   Suggestion:
     Add lock protection around all accesses to 'next_state'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

399. [CRITICAL] duration
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:32

   Description:
     Shared float 'duration' in class 'TransitionResult'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 160: write
     - Line 292: read

   Suggestion:
     Add lock protection around all accesses to 'duration'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

400. [CRITICAL] error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:33

   Description:
     Shared unknown 'error' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 157: write
     - Line 170: read
     - Line 298: read
     - Line 346: read
     - Line 358: read
     - Line 367: write

   Suggestion:
     Add lock protection around all accesses to 'error'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

401. [CRITICAL] data
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:34

   Description:
     Shared dict 'data' in class 'TransitionResult'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (7):
     - Line 293: read
     - Line 361: read
     - Line 363: write
     - Line 363: write
     - Line 363: read
     - Line 368: read
     - Line 368: read

   Suggestion:
     Protect check-then-act pattern on 'data' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

402. [CRITICAL] transition_type
   Type: TransitionType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:82

   Description:
     Shared TransitionType 'transition_type' in class 'TransitionFunction'. has 1 unprotected write and 8 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (9):
     - Line 142: read
     - Line 144: read
     - Line 146: read
     - Line 148: read
     - Line 380: write
     - Line 440: read
     - Line 452: read
     - Line 466: read
     - Line 472: read

   Suggestion:
     Add lock protection around all accesses to 'transition_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

403. [CRITICAL] fallback_function
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:108

   Description:
     Shared Optional 'fallback_function' in class 'TransitionFunction'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 361: read
     - Line 364: read
     - Line 392: write
     - Line 465: read
     - Line 474: read

   Suggestion:
     Add lock protection around all accesses to 'fallback_function'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

404. [CRITICAL] parameters
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:111

   Description:
     Shared dict 'parameters' in class 'TransitionFunction'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 130: read
     - Line 364: read
     - Line 405: write
     - Line 405: write
     - Line 405: read

   Suggestion:
     Add lock protection around all accesses to 'parameters'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

405. [CRITICAL] _last_result
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:114

   Description:
     Shared unknown '_last_result' in class 'TransitionFunction'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 166: write
     - Line 175: write
     - Line 414: read
     - Line 430: write

   Suggestion:
     Add lock protection around all accesses to '_last_result'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

406. [CRITICAL] _execution_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/transition_function.py:115

   Description:
     Shared int '_execution_count' in class 'TransitionFunction'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 127: read_write
     - Line 422: read
     - Line 431: write

   Suggestion:
     Add lock protection around all accesses to '_execution_count'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

407. [CRITICAL] times_visited
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_metrics_manager.py:25

   Description:
     Shared int 'times_visited' in class 'StateMetricsManager'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 54: read_write
     - Line 63: read
     - Line 67: write
     - Line 188: read

   Suggestion:
     Protect check-then-act pattern on 'times_visited' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

408. [CRITICAL] probability_exists
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_metrics_manager.py:28

   Description:
     Shared int 'probability_exists' in class 'StateMetricsManager'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 75: write
     - Line 83: read
     - Line 87: write
     - Line 189: read

   Suggestion:
     Protect check-then-act pattern on 'probability_exists' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

409. [CRITICAL] base_mock_find_stochastic_modifier
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_metrics_manager.py:31

   Description:
     Shared int 'base_mock_find_stochastic_modifier' in class 'StateMetricsManager'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 87: read
     - Line 95: write
     - Line 103: read

   Suggestion:
     Add lock protection around all accesses to 'base_mock_find_stochastic_modifier'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

410. [CRITICAL] path_score
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_metrics_manager.py:34

   Description:
     Shared int 'path_score' in class 'StateMetricsManager'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 111: write
     - Line 119: read
     - Line 190: read

   Suggestion:
     Add lock protection around all accesses to 'path_score'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

411. [CRITICAL] last_accessed
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_metrics_manager.py:37

   Description:
     Shared unknown 'last_accessed' in class 'StateMetricsManager'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 55: write
     - Line 143: read
     - Line 192: read
     - Line 193: read

   Suggestion:
     Add lock protection around all accesses to 'last_accessed'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

412. [CRITICAL] is_initial
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_metrics_manager.py:40

   Description:
     Shared bool 'is_initial' in class 'StateMetricsManager'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 127: write
     - Line 135: read
     - Line 191: read

   Suggestion:
     Add lock protection around all accesses to 'is_initial'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

413. [CRITICAL] usable_area
   Type: Region
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_metrics_manager.py:46

   Description:
     Shared Region 'usable_area' in class 'StateMetricsManager'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 167: write
     - Line 175: read

   Suggestion:
     Add lock protection around all accesses to 'usable_area'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

414. [CRITICAL] blocking
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_visibility_manager.py:20

   Description:
     Shared bool 'blocking' in class 'StateVisibilityManager'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 41: write
     - Line 49: read
     - Line 162: read

   Suggestion:
     Add lock protection around all accesses to 'blocking'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

415. [CRITICAL] hidden_state_names
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_visibility_manager.py:29

   Description:
     Shared set 'hidden_state_names' in class 'StateVisibilityManager'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 103: read
     - Line 119: read
     - Line 141: read
     - Line 145: write

   Suggestion:
     Protect check-then-act pattern on 'hidden_state_names' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

416. [CRITICAL] hidden_state_ids
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/managers/state_visibility_manager.py:32

   Description:
     Shared set 'hidden_state_ids' in class 'StateVisibilityManager'. has 1 unprotected write and 5 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (6):
     - Line 95: read
     - Line 111: read
     - Line 130: read
     - Line 149: write
     - Line 157: read
     - Line 164: read

   Suggestion:
     Add lock protection around all accesses to 'hidden_state_ids'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

417. [CRITICAL] pattern
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/special/state_text.py:32

   Description:
     Shared str 'pattern' in class 'TextPattern'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (7):
     - Line 49: write
     - Line 49: read
     - Line 51: write
     - Line 51: read
     - Line 63: read
     - Line 292: read
     - Line 403: read

   Suggestion:
     Protect check-then-act pattern on 'pattern' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

418. [CRITICAL] _instance
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/special/unknown_state.py:72

   Description:
     Shared Optional '_instance' in class 'UnknownState'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 144: read
     - Line 145: write
     - Line 146: read
     - Line 151: write

   Suggestion:
     Protect check-then-act pattern on '_instance' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

419. [CRITICAL] activate
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/code_state_transition.py:60

   Description:
     Shared set 'activate' in class 'CodeStateTransition'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 115: read
     - Line 134: read
     - Line 173: read
     - Line 181: write

   Suggestion:
     Add lock protection around all accesses to 'activate'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

420. [CRITICAL] exit
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/code_state_transition.py:66

   Description:
     Shared set 'exit' in class 'CodeStateTransition'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 123: read
     - Line 139: read
     - Line 189: read
     - Line 197: write

   Suggestion:
     Add lock protection around all accesses to 'exit'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

421. [CRITICAL] stays_visible_after_transition
   Type: StaysVisible
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/code_state_transition.py:77

   Description:
     Shared StaysVisible 'stays_visible_after_transition' in class 'CodeStateTransition'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 157: read
     - Line 165: write

   Suggestion:
     Add lock protection around all accesses to 'stays_visible_after_transition'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

422. [CRITICAL] _score
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/code_state_transition.py:81

   Description:
     Shared int '_score' in class 'CodeStateTransition'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 205: read
     - Line 213: write
     - Line 222: read
     - Line 231: write
     - Line 224: read
     - Line 303: read
     - Line 318: read

   Suggestion:
     Add lock protection around all accesses to '_score'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

423. [CRITICAL] times_successful
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/code_state_transition.py:85

   Description:
     Shared int 'times_successful' in class 'CodeStateTransition'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 100: read_write
     - Line 239: read
     - Line 247: write

   Suggestion:
     Add lock protection around all accesses to 'times_successful'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

424. [CRITICAL] state_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/state_transitions.py:41

   Description:
     Shared str 'state_name' in class 'StateTransitions'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 163: read
     - Line 164: read
     - Line 204: write
     - Line 296: write
     - Line 296: read

   Suggestion:
     Add lock protection around all accesses to 'state_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

425. [CRITICAL] transition_finish
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/state_transitions.py:47

   Description:
     Shared unknown 'transition_finish' in class 'StateTransitions'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (8):
     - Line 78: read
     - Line 205: read
     - Line 257: write
     - Line 258: write
     - Line 258: read
     - Line 272: write
     - Line 297: write
     - Line 297: read

   Suggestion:
     Add lock protection around all accesses to 'transition_finish'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

426. [CRITICAL] action_definition_transitions
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/state_transitions.py:50

   Description:
     Shared dict 'action_definition_transitions' in class 'StateTransitions'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 123: write
     - Line 123: write
     - Line 123: read

   Suggestion:
     Add lock protection around all accesses to 'action_definition_transitions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

427. [CRITICAL] transitions
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/state_transitions.py:53

   Description:
     Shared list 'transitions' in class 'StateTransitions'. has 1 unprotected write and 7 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (8):
     - Line 80: read
     - Line 115: read
     - Line 167: read
     - Line 206: read
     - Line 226: read
     - Line 238: read
     - Line 298: write
     - Line 298: read

   Suggestion:
     Add lock protection around all accesses to 'transitions'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

428. [CRITICAL] stays_visible_after_transition
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/navigation/transition/state_transitions.py:56

   Description:
     Shared bool 'stays_visible_after_transition' in class 'StateTransitions'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 105: read
     - Line 207: write
     - Line 286: write
     - Line 299: write
     - Line 299: read

   Suggestion:
     Add lock protection around all accesses to 'stays_visible_after_transition'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

429. [CRITICAL] operator
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/binary_operation_expression.py:40

   Description:
     Shared str 'operator' in class 'BinaryOperationExpression'. has 1 unprotected write and 16 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 17 total

   Suggestion:
     Add lock protection around all accesses to 'operator'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

430. [CRITICAL] left
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/binary_operation_expression.py:46

   Description:
     Shared unknown 'left' in class 'BinaryOperationExpression'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 67: write
     - Line 80: write
     - Line 82: write
     - Line 98: read
     - Line 99: read
     - Line 113: read
     - Line 116: read

   Suggestion:
     Add lock protection around all accesses to 'left'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

431. [CRITICAL] right
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/binary_operation_expression.py:49

   Description:
     Shared unknown 'right' in class 'BinaryOperationExpression'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (7):
     - Line 68: write
     - Line 84: write
     - Line 86: write
     - Line 100: read
     - Line 101: read
     - Line 113: read
     - Line 117: read

   Suggestion:
     Add lock protection around all accesses to 'right'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

432. [CRITICAL] value_type
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/literal_expression.py:28

   Description:
     Shared str 'value_type' in class 'LiteralExpression'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 43: write
     - Line 65: read

   Suggestion:
     Add lock protection around all accesses to 'value_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

433. [CRITICAL] value
   Type: Any
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/literal_expression.py:32

   Description:
     Shared Any 'value' in class 'LiteralExpression'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 44: write
     - Line 66: read
     - Line 78: read

   Suggestion:
     Add lock protection around all accesses to 'value'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

434. [CRITICAL] object
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/method_call_expression.py:34

   Description:
     Shared unknown 'object' in class 'MethodCallExpression'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 55: write
     - Line 82: read
     - Line 83: read
     - Line 104: read

   Suggestion:
     Add lock protection around all accesses to 'object'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

435. [CRITICAL] method
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/method_call_expression.py:38

   Description:
     Shared str 'method' in class 'MethodCallExpression'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 56: write
     - Line 84: read
     - Line 104: read

   Suggestion:
     Add lock protection around all accesses to 'method'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

436. [CRITICAL] arguments
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/method_call_expression.py:41

   Description:
     Shared list 'arguments' in class 'MethodCallExpression'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 57: write
     - Line 69: write
     - Line 71: write
     - Line 85: read
     - Line 86: read
     - Line 99: read

   Suggestion:
     Add lock protection around all accesses to 'arguments'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

437. [CRITICAL] name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/expressions/variable_expression.py:26

   Description:
     Shared str 'name' in class 'VariableExpression'. has 1 unprotected write and 4 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (5):
     - Line 37: write
     - Line 58: read
     - Line 73: read
     - Line 74: read
     - Line 75: read

   Suggestion:
     Add lock protection around all accesses to 'name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

438. [CRITICAL] action_options
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/model/action_step.py:34

   Description:
     Shared Optional 'action_options' in class 'ActionStep'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 50: write
     - Line 53: write
     - Line 69: read
     - Line 70: read

   Suggestion:
     Add lock protection around all accesses to 'action_options'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

439. [CRITICAL] object_collection
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/model/action_step.py:37

   Description:
     Shared Optional 'object_collection' in class 'ActionStep'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (4):
     - Line 55: write
     - Line 58: write
     - Line 71: read
     - Line 72: read

   Suggestion:
     Add lock protection around all accesses to 'object_collection'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

440. [CRITICAL] steps
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/model/task_sequence.py:38

   Description:
     Shared list 'steps' in class 'TaskSequence'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 51: write
     - Line 53: write
     - Line 63: read

   Suggestion:
     Add lock protection around all accesses to 'steps'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

441. [CRITICAL] variable_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/assignment_statement.py:36

   Description:
     Shared str 'variable_name' in class 'AssignmentStatement'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 51: write
     - Line 79: read

   Suggestion:
     Add lock protection around all accesses to 'variable_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

442. [CRITICAL] value
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/assignment_statement.py:40

   Description:
     Shared unknown 'value' in class 'AssignmentStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 52: write
     - Line 66: write
     - Line 68: write
     - Line 80: read
     - Line 81: read

   Suggestion:
     Add lock protection around all accesses to 'value'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

443. [CRITICAL] variable_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/for_each_statement.py:39

   Description:
     Shared str 'variable_name' in class 'ForEachStatement'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 64: write
     - Line 99: read

   Suggestion:
     Add lock protection around all accesses to 'variable_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

444. [CRITICAL] collection
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/for_each_statement.py:43

   Description:
     Shared unknown 'collection' in class 'ForEachStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 65: write
     - Line 80: write
     - Line 82: write
     - Line 100: read
     - Line 101: read

   Suggestion:
     Add lock protection around all accesses to 'collection'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

445. [CRITICAL] statements
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/for_each_statement.py:47

   Description:
     Shared list 'statements' in class 'ForEachStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 66: write
     - Line 84: write
     - Line 86: write
     - Line 102: read
     - Line 103: read

   Suggestion:
     Add lock protection around all accesses to 'statements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

446. [CRITICAL] condition
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/if_statement.py:44

   Description:
     Shared unknown 'condition' in class 'IfStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 69: write
     - Line 85: write
     - Line 87: write
     - Line 108: read
     - Line 109: read

   Suggestion:
     Add lock protection around all accesses to 'condition'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

447. [CRITICAL] then_statements
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/if_statement.py:48

   Description:
     Shared list 'then_statements' in class 'IfStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 70: write
     - Line 89: write
     - Line 91: write
     - Line 110: read
     - Line 111: read

   Suggestion:
     Add lock protection around all accesses to 'then_statements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

448. [CRITICAL] else_statements
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/if_statement.py:51

   Description:
     Shared list 'else_statements' in class 'IfStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 71: write
     - Line 93: write
     - Line 95: write
     - Line 112: read
     - Line 113: read

   Suggestion:
     Add lock protection around all accesses to 'else_statements'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

449. [CRITICAL] object
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/method_call_statement.py:39

   Description:
     Shared unknown 'object' in class 'MethodCallStatement'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 68: write
     - Line 97: read
     - Line 98: read

   Suggestion:
     Add lock protection around all accesses to 'object'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

450. [CRITICAL] method
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/method_call_statement.py:44

   Description:
     Shared str 'method' in class 'MethodCallStatement'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 69: write
     - Line 99: read

   Suggestion:
     Add lock protection around all accesses to 'method'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

451. [CRITICAL] arguments
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/method_call_statement.py:49

   Description:
     Shared list 'arguments' in class 'MethodCallStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 70: write
     - Line 84: write
     - Line 86: write
     - Line 100: read
     - Line 101: read

   Suggestion:
     Add lock protection around all accesses to 'arguments'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

452. [CRITICAL] value
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/return_statement.py:38

   Description:
     Shared unknown 'value' in class 'ReturnStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 49: write
     - Line 61: write
     - Line 65: write
     - Line 76: read
     - Line 77: read

   Suggestion:
     Add lock protection around all accesses to 'value'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

453. [CRITICAL] variable_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/variable_declaration_statement.py:36

   Description:
     Shared str 'variable_name' in class 'VariableDeclarationStatement'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 62: write
     - Line 95: read

   Suggestion:
     Add lock protection around all accesses to 'variable_name'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

454. [CRITICAL] variable_type
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/variable_declaration_statement.py:40

   Description:
     Shared str 'variable_type' in class 'VariableDeclarationStatement'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 63: write
     - Line 96: read

   Suggestion:
     Add lock protection around all accesses to 'variable_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

455. [CRITICAL] initial_value
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/runner/dsl/statements/variable_declaration_statement.py:44

   Description:
     Shared unknown 'initial_value' in class 'VariableDeclarationStatement'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 64: write
     - Line 76: write
     - Line 80: write
     - Line 97: read
     - Line 98: read

   Suggestion:
     Add lock protection around all accesses to 'initial_value'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

456. [CRITICAL] x
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/pixel_location.py:19

   Description:
     Shared int 'x' in class 'Point'. has 1 unprotected write and 13 unprotected reads (read-write race). No locking mechanism found.

   Access Locations: 14 total

   Suggestion:
     Add lock protection around all accesses to 'x'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

457. [CRITICAL] pixels
   Type: set
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/pixel_location.py:38

   Description:
     Shared set 'pixels' in class 'PixelLocation'. has 4 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations: 30 total

   Suggestion:
     Add lock protection around all accesses to 'pixels'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

458. [CRITICAL] _min_x
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/pixel_location.py:41

   Description:
     Shared unknown '_min_x' in class 'PixelLocation'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 54: write
     - Line 61: write
     - Line 186: read
     - Line 194: read
     - Line 337: write
     - Line 337: read

   Suggestion:
     Add lock protection around all accesses to '_min_x'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

459. [CRITICAL] _min_y
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/pixel_location.py:42

   Description:
     Shared unknown '_min_y' in class 'PixelLocation'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 54: write
     - Line 62: write
     - Line 187: read
     - Line 195: read
     - Line 338: write
     - Line 338: read

   Suggestion:
     Add lock protection around all accesses to '_min_y'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

460. [CRITICAL] _max_x
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/pixel_location.py:43

   Description:
     Shared unknown '_max_x' in class 'PixelLocation'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 54: write
     - Line 63: write
     - Line 188: read
     - Line 196: read
     - Line 339: write
     - Line 339: read

   Suggestion:
     Add lock protection around all accesses to '_max_x'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

461. [CRITICAL] _max_y
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/pixel_location.py:44

   Description:
     Shared unknown '_max_y' in class 'PixelLocation'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 54: write
     - Line 64: write
     - Line 189: read
     - Line 197: read
     - Line 340: write
     - Line 340: read

   Suggestion:
     Add lock protection around all accesses to '_max_y'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

462. [CRITICAL] _centroid
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/pixel_location.py:45

   Description:
     Shared unknown '_centroid' in class 'PixelLocation'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (3):
     - Line 55: write
     - Line 69: write
     - Line 212: read

   Suggestion:
     Add lock protection around all accesses to '_centroid'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

463. [CRITICAL] id
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_object.py:59

   Description:
     Shared str 'id' in class 'SemanticObject'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations (4):
     - Line 79: read
     - Line 82: write
     - Line 309: read
     - Line 329: read

   Suggestion:
     Protect check-then-act pattern on 'id' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

464. [CRITICAL] object_type
   Type: ObjectType
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_object.py:65

   Description:
     Shared ObjectType 'object_type' in class 'SemanticObject'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (6):
     - Line 120: write
     - Line 122: write
     - Line 155: read
     - Line 312: read
     - Line 329: read
     - Line 337: read

   Suggestion:
     Add lock protection around all accesses to 'object_type'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

465. [CRITICAL] ocr_text
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_object.py:68

   Description:
     Shared unknown 'ocr_text' in class 'SemanticObject'. has 1 unprotected write and 2 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (3):
     - Line 180: write
     - Line 189: read
     - Line 322: read

   Suggestion:
     Add lock protection around all accesses to 'ocr_text'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

466. [CRITICAL] attributes
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_object.py:71

   Description:
     Shared dict 'attributes' in class 'SemanticObject'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (5):
     - Line 99: write
     - Line 99: write
     - Line 99: read
     - Line 111: read
     - Line 321: read

   Suggestion:
     Add lock protection around all accesses to 'attributes'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

467. [CRITICAL] _is_interactable
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_object.py:74

   Description:
     Shared unknown '_is_interactable' in class 'SemanticObject'. has 1 unprotected write and 3 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (4):
     - Line 131: write
     - Line 140: read
     - Line 141: read
     - Line 323: read

   Suggestion:
     Add lock protection around all accesses to '_is_interactable'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

468. [CRITICAL] _dominant_color
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_object.py:75

   Description:
     Shared unknown '_dominant_color' in class 'SemanticObject'. has 1 unprotected write and 1 unprotected reads (read-write race). No locking mechanism found.

   Access Locations (2):
     - Line 163: write
     - Line 172: read

   Suggestion:
     Add lock protection around all accesses to '_dominant_color'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

469. [CRITICAL] _objects_by_id
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_scene.py:37

   Description:
     Shared dict '_objects_by_id' in class 'SemanticScene'. has 3 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (10):
     - Line 48: write
     - Line 63: write
     - Line 63: write
     - Line 63: read
     - Line 78: read
     - Line 81: read
     - Line 81: read
     - Line 83: read
     - Line 83: read
     - Line 101: read

   Suggestion:
     Add lock protection around all accesses to '_objects_by_id'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

470. [CRITICAL] _objects_by_type
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/core/semantic_scene.py:38

   Description:
     Shared dict '_objects_by_type' in class 'SemanticScene'. has 5 unprotected write operations (write-write race). No locking mechanism found.

   Patterns Detected:
     - check-then-act

   Access Locations: 22 total

   Suggestion:
     Protect check-then-act pattern on '_objects_by_type' with a lock. The check and act operations must be atomic. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

471. [CRITICAL] custom_params
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/processors/base.py:42

   Description:
     Shared dict 'custom_params' in class 'ProcessorConfig'. has 2 unprotected write operations (write-write race). No locking mechanism found.

   Access Locations (2):
     - Line 143: write
     - Line 143: write

   Suggestion:
     Add lock protection around all accesses to 'custom_params'. Multiple threads are writing to this state simultaneously. Add a lock: self._lock = threading.Lock() in __init__, then use 'with self._lock:' around state access.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

472. [HIGH] before_action_message
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:38

   Description:
     Shared unknown 'before_action_message' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 283: write

   Suggestion:
     Add lock protection for writes to 'before_action_message'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

473. [HIGH] after_action_message
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:39

   Description:
     Shared unknown 'after_action_message' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 296: write

   Suggestion:
     Add lock protection for writes to 'after_action_message'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

474. [HIGH] success_message
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:40

   Description:
     Shared unknown 'success_message' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 309: write

   Suggestion:
     Add lock protection for writes to 'success_message'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

475. [HIGH] failure_message
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:41

   Description:
     Shared unknown 'failure_message' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 322: write

   Suggestion:
     Add lock protection for writes to 'failure_message'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

476. [HIGH] log_before_action
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:42

   Description:
     Shared bool 'log_before_action' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 284: write

   Suggestion:
     Add lock protection for writes to 'log_before_action'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

477. [HIGH] log_after_action
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:43

   Description:
     Shared bool 'log_after_action' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 297: write

   Suggestion:
     Add lock protection for writes to 'log_after_action'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

478. [HIGH] log_on_success
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:44

   Description:
     Shared bool 'log_on_success' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 310: write

   Suggestion:
     Add lock protection for writes to 'log_on_success'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

479. [HIGH] log_on_failure
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_config.py:45

   Description:
     Shared bool 'log_on_failure' in class 'LoggingOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 323: write

   Suggestion:
     Add lock protection for writes to 'log_on_failure'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

480. [HIGH] action_description
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:36

   Description:
     Shared str 'action_description' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 94: write

   Suggestion:
     Add lock protection for writes to 'action_description'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

481. [HIGH] output_text
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:42

   Description:
     Shared str 'output_text' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 96: write

   Suggestion:
     Add lock protection for writes to 'output_text'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

482. [HIGH] initial_match_list
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:48

   Description:
     Shared list 'initial_match_list' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 98: write

   Suggestion:
     Add lock protection for writes to 'initial_match_list'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

483. [HIGH] max_matches
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:51

   Description:
     Shared int 'max_matches' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 99: write

   Suggestion:
     Add lock protection for writes to 'max_matches'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

484. [HIGH] selected_text
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:57

   Description:
     Shared str 'selected_text' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 101: write

   Suggestion:
     Add lock protection for writes to 'selected_text'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

485. [HIGH] duration
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:63

   Description:
     Shared unknown 'duration' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 103: write

   Suggestion:
     Add lock protection for writes to 'duration'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

486. [HIGH] start_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:66

   Description:
     Shared unknown 'start_time' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 104: write

   Suggestion:
     Add lock protection for writes to 'start_time'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

487. [HIGH] end_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:69

   Description:
     Shared unknown 'end_time' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 105: write

   Suggestion:
     Add lock protection for writes to 'end_time'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

488. [HIGH] action_config
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/action_result.py:84

   Description:
     Shared Optional 'action_config' in class 'ActionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 93: write

   Suggestion:
     Add lock protection for writes to 'action_config'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

489. [HIGH] last_find_location
   Type: Optional
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/action_executors/base.py:34

   Description:
     Shared Optional 'last_find_location' in class 'ExecutionContext'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 57: write

   Suggestion:
     Add lock protection for writes to 'last_find_location'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

490. [HIGH] display_server
   Type: DisplayServer
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/execution_environment.py:71

   Description:
     Shared DisplayServer 'display_server' in class 'SystemInfo'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 173: write

   Suggestion:
     Add lock protection for writes to 'display_server'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

491. [HIGH] screen_count
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/execution_environment.py:74

   Description:
     Shared int 'screen_count' in class 'SystemInfo'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 243: write

   Suggestion:
     Add lock protection for writes to 'screen_count'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

492. [HIGH] dpi
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/execution_environment.py:80

   Description:
     Shared unknown 'dpi' in class 'SystemInfo'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 246: write

   Suggestion:
     Add lock protection for writes to 'dpi'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

493. [HIGH] is_virtual
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/execution_environment.py:83

   Description:
     Shared bool 'is_virtual' in class 'SystemInfo'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 179: write

   Suggestion:
     Add lock protection for writes to 'is_virtual'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

494. [HIGH] is_container
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/execution_environment.py:86

   Description:
     Shared bool 'is_container' in class 'SystemInfo'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 180: write

   Suggestion:
     Add lock protection for writes to 'is_container'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

495. [HIGH] is_wsl
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/execution_environment.py:89

   Description:
     Shared bool 'is_wsl' in class 'SystemInfo'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 181: write

   Suggestion:
     Add lock protection for writes to 'is_wsl'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

496. [HIGH] valid
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/config/workflow_validation.py:25

   Description:
     Shared bool 'valid' in class 'ValidationResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 39: write

   Suggestion:
     Add lock protection for writes to 'valid'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

497. [HIGH] result
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/execution_types.py:44

   Description:
     Shared unknown 'result' in class 'ActionExecutionRecord'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 63: write

   Suggestion:
     Add lock protection for writes to 'result'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

498. [HIGH] output_type
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/execution_types.py:46

   Description:
     Shared unknown 'output_type' in class 'ActionExecutionRecord'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 64: write

   Suggestion:
     Add lock protection for writes to 'output_type'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

499. [HIGH] output_index
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/execution/execution_types.py:47

   Description:
     Shared int 'output_index' in class 'ActionExecutionRecord'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 65: write

   Suggestion:
     Add lock protection for writes to 'output_index'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

500. [HIGH] pattern
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/find/match.py:29

   Description:
     Shared unknown 'pattern' in class 'Match'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 38: write

   Suggestion:
     Add lock protection for writes to 'pattern'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

501. [HIGH] state_object_data
   Type: Any
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/find/match.py:30

   Description:
     Shared Any 'state_object_data' in class 'Match'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 39: write

   Suggestion:
     Add lock protection for writes to 'state_object_data'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

502. [HIGH] input_controller
   Type: IInputController
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/hal/container.py:47

   Description:
     Shared IInputController 'input_controller' in class 'HALContainer'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 91: write

   Suggestion:
     Add lock protection for writes to 'input_controller'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

503. [HIGH] screen_capture
   Type: IScreenCapture
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/hal/container.py:48

   Description:
     Shared IScreenCapture 'screen_capture' in class 'HALContainer'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 92: write

   Suggestion:
     Add lock protection for writes to 'screen_capture'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

504. [HIGH] pattern_matcher
   Type: IPatternMatcher
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/hal/container.py:49

   Description:
     Shared IPatternMatcher 'pattern_matcher' in class 'HALContainer'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 93: write

   Suggestion:
     Add lock protection for writes to 'pattern_matcher'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

505. [HIGH] ocr_engine
   Type: IOCREngine
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/hal/container.py:50

   Description:
     Shared IOCREngine 'ocr_engine' in class 'HALContainer'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 94: write

   Suggestion:
     Add lock protection for writes to 'ocr_engine'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

506. [HIGH] platform_specific
   Type: IPlatformSpecific
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/hal/container.py:51

   Description:
     Shared IPlatformSpecific 'platform_specific' in class 'HALContainer'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 95: write

   Suggestion:
     Add lock protection for writes to 'platform_specific'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

507. [HIGH] workflow_map
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/json_executor/config_parser.py:752

   Description:
     Shared dict 'workflow_map' in class 'QontinuiConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 777: write

   Suggestion:
     Add lock protection for writes to 'workflow_map'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

508. [HIGH] state_map
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/json_executor/config_parser.py:753

   Description:
     Shared dict 'state_map' in class 'QontinuiConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 778: write

   Suggestion:
     Add lock protection for writes to 'state_map'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

509. [HIGH] image_map
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/json_executor/config_parser.py:754

   Description:
     Shared dict 'image_map' in class 'QontinuiConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 783: write

   Suggestion:
     Add lock protection for writes to 'image_map'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

510. [HIGH] schedule_map
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/json_executor/config_parser.py:755

   Description:
     Shared dict 'schedule_map' in class 'QontinuiConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 779: write

   Suggestion:
     Add lock protection for writes to 'schedule_map'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

511. [HIGH] error_message
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/enhanced_transition_executor.py:54

   Description:
     Shared unknown 'error_message' in class 'ExecutionContext'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 168: write

   Suggestion:
     Add lock protection for writes to 'error_message'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

512. [HIGH] multistate_id
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/multistate_integration/multistate_adapter.py:37

   Description:
     Shared str 'multistate_id' in class 'StateMapping'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 89: write

   Suggestion:
     Add lock protection for writes to 'multistate_id'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

513. [HIGH] total_retries
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:29

   Description:
     Shared int 'total_retries' in class 'ExecutionStatistics'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 268: read_write

   Suggestion:
     Add lock protection for writes to 'total_retries'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

514. [HIGH] error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/orchestration/execution_context.py:89

   Description:
     Shared unknown 'error' in class 'ActionState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 254: write

   Suggestion:
     Add lock protection for writes to 'error'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

515. [HIGH] session_id
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:18

   Description:
     Shared str 'session_id' in class 'SessionMetadata'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 35: write

   Suggestion:
     Add lock protection for writes to 'session_id'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

516. [HIGH] name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:19

   Description:
     Shared str 'name' in class 'SessionMetadata'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 36: write

   Suggestion:
     Add lock protection for writes to 'name'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

517. [HIGH] application
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:20

   Description:
     Shared str 'application' in class 'SessionMetadata'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 37: write

   Suggestion:
     Add lock protection for writes to 'application'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

518. [HIGH] start_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:21

   Description:
     Shared unknown 'start_time' in class 'SessionMetadata'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 38: write

   Suggestion:
     Add lock protection for writes to 'start_time'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

519. [HIGH] end_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:22

   Description:
     Shared unknown 'end_time' in class 'SessionMetadata'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 39: write

   Suggestion:
     Add lock protection for writes to 'end_time'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

520. [HIGH] metadata
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/persistence/persistence_provider.py:25

   Description:
     Shared str 'metadata' in class 'SessionMetadata'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 42: write

   Suggestion:
     Add lock protection for writes to 'metadata'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

521. [HIGH] color_strategy
   Type: ColorStrategy
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_find_options.py:81

   Description:
     Shared ColorStrategy 'color_strategy' in class 'ColorFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 106: write

   Suggestion:
     Add lock protection for writes to 'color_strategy'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

522. [HIGH] r_mean
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_statistics.py:44

   Description:
     Shared unknown 'r_mean' in class 'ColorStatistics'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 149: write

   Suggestion:
     Add lock protection for writes to 'r_mean'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

523. [HIGH] g_mean
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_statistics.py:45

   Description:
     Shared unknown 'g_mean' in class 'ColorStatistics'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 150: write

   Suggestion:
     Add lock protection for writes to 'g_mean'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

524. [HIGH] b_mean
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/color/color_statistics.py:46

   Description:
     Shared unknown 'b_mean' in class 'ColorStatistics'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 151: write

   Suggestion:
     Add lock protection for writes to 'b_mean'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

525. [HIGH] move_speed
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/mouse/mouse_move_options.py:22

   Description:
     Shared float 'move_speed' in class 'MouseMoveOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 42: write

   Suggestion:
     Add lock protection for writes to 'move_speed'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

526. [HIGH] offset_x
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/region/define_region_options.py:40

   Description:
     Shared int 'offset_x' in class 'DefineRegionOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 136: write

   Suggestion:
     Add lock protection for writes to 'offset_x'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

527. [HIGH] offset_y
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/region/define_region_options.py:41

   Description:
     Shared int 'offset_y' in class 'DefineRegionOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 137: write

   Suggestion:
     Add lock protection for writes to 'offset_y'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

528. [HIGH] expand_width
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/region/define_region_options.py:42

   Description:
     Shared int 'expand_width' in class 'DefineRegionOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 150: write

   Suggestion:
     Add lock protection for writes to 'expand_width'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

529. [HIGH] expand_height
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/region/define_region_options.py:43

   Description:
     Shared int 'expand_height' in class 'DefineRegionOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 151: write

   Suggestion:
     Add lock protection for writes to 'expand_height'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

530. [HIGH] modifiers
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/key_down_options.py:23

   Description:
     Shared list 'modifiers' in class 'KeyDownOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 59: write

   Suggestion:
     Add lock protection for writes to 'modifiers'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

531. [HIGH] pause_between_keys
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/key_down_options.py:24

   Description:
     Shared float 'pause_between_keys' in class 'KeyDownOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 71: write

   Suggestion:
     Add lock protection for writes to 'pause_between_keys'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

532. [HIGH] modifiers
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/key_up_options.py:23

   Description:
     Shared list 'modifiers' in class 'KeyUpOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 60: write

   Suggestion:
     Add lock protection for writes to 'modifiers'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

533. [HIGH] pause_between_keys
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/key_up_options.py:24

   Description:
     Shared float 'pause_between_keys' in class 'KeyUpOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 72: write

   Suggestion:
     Add lock protection for writes to 'pause_between_keys'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

534. [HIGH] release_modifiers_first
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/key_up_options.py:25

   Description:
     Shared bool 'release_modifiers_first' in class 'KeyUpOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 84: write

   Suggestion:
     Add lock protection for writes to 'release_modifiers_first'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

535. [HIGH] clear_before
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/type_action.py:34

   Description:
     Shared bool 'clear_before' in class 'TypeOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 64: write

   Suggestion:
     Add lock protection for writes to 'clear_before'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

536. [HIGH] type_delay
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/type_action.py:36

   Description:
     Shared float 'type_delay' in class 'TypeOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 85: write

   Suggestion:
     Add lock protection for writes to 'type_delay'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

537. [HIGH] secure_mode
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/type/type_action.py:38

   Description:
     Shared bool 'secure_mode' in class 'TypeOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 103: write

   Suggestion:
     Add lock protection for writes to 'secure_mode'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

538. [HIGH] poll_interval
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/wait/wait.py:39

   Description:
     Shared float 'poll_interval' in class 'WaitOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 122: write

   Suggestion:
     Add lock protection for writes to 'poll_interval'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

539. [HIGH] return_best_match
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:67

   Description:
     Shared bool 'return_best_match' in class 'BaseFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 169: write

   Suggestion:
     Add lock protection for writes to 'return_best_match'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

540. [HIGH] cache_results
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:68

   Description:
     Shared bool 'cache_results' in class 'BaseFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 220: write

   Suggestion:
     Add lock protection for writes to 'cache_results'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

541. [HIGH] use_gpu
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:71

   Description:
     Shared bool 'use_gpu' in class 'BaseFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 202: write

   Suggestion:
     Add lock protection for writes to 'use_gpu'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

542. [HIGH] parallel_search
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:72

   Description:
     Shared bool 'parallel_search' in class 'BaseFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 211: write

   Suggestion:
     Add lock protection for writes to 'parallel_search'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

543. [HIGH] save_debug_images
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:75

   Description:
     Shared bool 'save_debug_images' in class 'BaseFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 229: write

   Suggestion:
     Add lock protection for writes to 'save_debug_images'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

544. [HIGH] highlight_matches
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/base_find_options.py:76

   Description:
     Shared bool 'highlight_matches' in class 'BaseFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 230: write

   Suggestion:
     Add lock protection for writes to 'highlight_matches'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

545. [HIGH] match_method
   Type: MatchMethod
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:43

   Description:
     Shared MatchMethod 'match_method' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 146: write

   Suggestion:
     Add lock protection for writes to 'match_method'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

546. [HIGH] scale_invariant
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:44

   Description:
     Shared bool 'scale_invariant' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 161: write

   Suggestion:
     Add lock protection for writes to 'scale_invariant'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

547. [HIGH] rotation_invariant
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:45

   Description:
     Shared bool 'rotation_invariant' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 178: write

   Suggestion:
     Add lock protection for writes to 'rotation_invariant'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

548. [HIGH] min_rotation
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:53

   Description:
     Shared float 'min_rotation' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 179: write

   Suggestion:
     Add lock protection for writes to 'min_rotation'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

549. [HIGH] max_rotation
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:54

   Description:
     Shared float 'max_rotation' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 180: write

   Suggestion:
     Add lock protection for writes to 'max_rotation'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

550. [HIGH] use_grayscale
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:58

   Description:
     Shared bool 'use_grayscale' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 210: write

   Suggestion:
     Add lock protection for writes to 'use_grayscale'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

551. [HIGH] color_tolerance
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:60

   Description:
     Shared float 'color_tolerance' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 209: write

   Suggestion:
     Add lock protection for writes to 'color_tolerance'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

552. [HIGH] use_edges
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:63

   Description:
     Shared bool 'use_edges' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 195: write

   Suggestion:
     Add lock protection for writes to 'use_edges'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

553. [HIGH] edge_threshold1
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:64

   Description:
     Shared float 'edge_threshold1' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 196: write

   Suggestion:
     Add lock protection for writes to 'edge_threshold1'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

554. [HIGH] edge_threshold2
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:65

   Description:
     Shared float 'edge_threshold2' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 197: write

   Suggestion:
     Add lock protection for writes to 'edge_threshold2'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

555. [HIGH] non_max_suppression
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:73

   Description:
     Shared bool 'non_max_suppression' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 234: write

   Suggestion:
     Add lock protection for writes to 'non_max_suppression'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

556. [HIGH] nms_threshold
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/pattern_find_options.py:74

   Description:
     Shared float 'nms_threshold' in class 'PatternFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 235: write

   Suggestion:
     Add lock protection for writes to 'nms_threshold'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

557. [HIGH] ocr_engine
   Type: OCREngine
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:67

   Description:
     Shared OCREngine 'ocr_engine' in class 'TextFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 159: write

   Suggestion:
     Add lock protection for writes to 'ocr_engine'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

558. [HIGH] language
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:68

   Description:
     Shared str 'language' in class 'TextFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 147: write

   Suggestion:
     Add lock protection for writes to 'language'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

559. [HIGH] whitelist_chars
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:69

   Description:
     Shared str 'whitelist_chars' in class 'TextFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 223: write

   Suggestion:
     Add lock protection for writes to 'whitelist_chars'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

560. [HIGH] case_sensitive
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:74

   Description:
     Shared bool 'case_sensitive' in class 'TextFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 211: write

   Suggestion:
     Add lock protection for writes to 'case_sensitive'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

561. [HIGH] preprocessing
   Type: list
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:83

   Description:
     Shared list 'preprocessing' in class 'TextFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 235: write

   Suggestion:
     Add lock protection for writes to 'preprocessing'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

562. [HIGH] return_word_boxes
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/basic/find/options/text_find_options.py:104

   Description:
     Shared bool 'return_word_boxes' in class 'TextFindOptions'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 268: write

   Suggestion:
     Add lock protection for writes to 'return_word_boxes'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

563. [HIGH] max_parallel
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/multiple/multiple_actions.py:46

   Description:
     Shared int 'max_parallel' in class 'MultipleActionsOptions'. has unprotected write operation. Locks available but not used: ['_stop_flag', '_anonymous'].

   Access Locations (1):
     - Line 64: write

   Suggestion:
     Add lock protection for writes to 'max_parallel'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

564. [HIGH] timeout
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/multiple/multiple_actions.py:47

   Description:
     Shared float 'timeout' in class 'MultipleActionsOptions'. has unprotected write operation. Locks available but not used: ['_stop_flag', '_anonymous'].

   Access Locations (1):
     - Line 107: write

   Suggestion:
     Add lock protection for writes to 'timeout'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

565. [HIGH] wait_between_groups
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/multiple/multiple_actions.py:48

   Description:
     Shared float 'wait_between_groups' in class 'MultipleActionsOptions'. has unprotected write operation. Locks available but not used: ['_stop_flag', '_anonymous'].

   Access Locations (1):
     - Line 95: write

   Suggestion:
     Add lock protection for writes to 'wait_between_groups'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

566. [HIGH] fail_fast
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/composite/multiple/multiple_actions.py:49

   Description:
     Shared bool 'fail_fast' in class 'MultipleActionsOptions'. has unprotected write operation. Locks available but not used: ['_stop_flag', '_anonymous'].

   Access Locations (1):
     - Line 116: write

   Suggestion:
     Add lock protection for writes to 'fail_fast'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

567. [HIGH] stage
   Type: LifecycleStage
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:51

   Description:
     Shared LifecycleStage 'stage' in class 'LifecycleState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 351: write

   Suggestion:
     Add lock protection for writes to 'stage'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

568. [HIGH] initialized_at
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:53

   Description:
     Shared unknown 'initialized_at' in class 'LifecycleState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 149: write

   Suggestion:
     Add lock protection for writes to 'initialized_at'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

569. [HIGH] started_at
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:54

   Description:
     Shared unknown 'started_at' in class 'LifecycleState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 244: write

   Suggestion:
     Add lock protection for writes to 'started_at'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

570. [HIGH] completed_at
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:55

   Description:
     Shared unknown 'completed_at' in class 'LifecycleState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 282: write

   Suggestion:
     Add lock protection for writes to 'completed_at'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

571. [HIGH] destroyed_at
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:56

   Description:
     Shared unknown 'destroyed_at' in class 'LifecycleState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 329: write

   Suggestion:
     Add lock protection for writes to 'destroyed_at'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

572. [HIGH] is_prepared
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:58

   Description:
     Shared bool 'is_prepared' in class 'LifecycleState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 214: write

   Suggestion:
     Add lock protection for writes to 'is_prepared'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

573. [HIGH] is_complete
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/actions/internal/execution/action_lifecycle.py:60

   Description:
     Shared bool 'is_complete' in class 'LifecycleState'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 283: write

   Suggestion:
     Add lock protection for writes to 'is_complete'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

574. [HIGH] execution_id
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/routers/execution_router.py:51

   Description:
     Shared str 'execution_id' in class 'ExecutionHandleResponse'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 135: write

   Suggestion:
     Add lock protection for writes to 'execution_id'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

575. [HIGH] execution_id
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/api/routers/execution_router.py:62

   Description:
     Shared str 'execution_id' in class 'ExecutionStatusResponse'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 135: write

   Suggestion:
     Add lock protection for writes to 'execution_id'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

576. [HIGH] args
   Type: tuple
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/collect_data.py:32

   Description:
     Shared tuple 'args' in class 'CollectedData'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 123: write

   Suggestion:
     Add lock protection for writes to 'args'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

577. [HIGH] kwargs
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/collect_data.py:35

   Description:
     Shared dict 'kwargs' in class 'CollectedData'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 124: write

   Suggestion:
     Add lock protection for writes to 'kwargs'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

578. [HIGH] custom_data
   Type: dict
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/annotations/collect_data.py:44

   Description:
     Shared dict 'custom_data' in class 'CollectedData'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 129: write

   Suggestion:
     Add lock protection for writes to 'custom_data'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

579. [HIGH] last_call_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/performance_monitoring_aspect.py:42

   Description:
     Shared unknown 'last_call_time' in class 'MethodPerformanceStats'. has unprotected write operation. Locks available but not used: ['_stats_lock', '_anonymous'].

   Access Locations (1):
     - Line 90: write

   Suggestion:
     Add lock protection for writes to 'last_call_time'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

580. [HIGH] from_state
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:21

   Description:
     Shared str 'from_state' in class 'TransitionStats'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 162: write

   Suggestion:
     Add lock protection for writes to 'from_state'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

581. [HIGH] to_state
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:24

   Description:
     Shared str 'to_state' in class 'TransitionStats'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 163: write

   Suggestion:
     Add lock protection for writes to 'to_state'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

582. [HIGH] failed_transitions
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:33

   Description:
     Shared int 'failed_transitions' in class 'TransitionStats'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 295: read_write

   Suggestion:
     Add lock protection for writes to 'failed_transitions'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

583. [HIGH] last_transition_time
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/aspects/monitoring/state_transition_aspect.py:45

   Description:
     Shared unknown 'last_transition_time' in class 'TransitionStats'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 297: write

   Suggestion:
     Add lock protection for writes to 'last_transition_time'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

584. [HIGH] image
   Type: Image
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/find/screenshot/cached_provider.py:26

   Description:
     Shared Image 'image' in class 'CacheEntry'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 87: write

   Suggestion:
     Add lock protection for writes to 'image'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

585. [HIGH] times_acted_on
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/match/match.py:44

   Description:
     Shared int 'times_acted_on' in class 'MatchMetadata'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 52: read_write

   Suggestion:
     Add lock protection for writes to 'times_acted_on'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

586. [HIGH] _max_state_history
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_memory.py:31

   Description:
     Shared int '_max_state_history' in class 'StateMemory'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 217: write

   Suggestion:
     Add lock protection for writes to '_max_state_history'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

587. [HIGH] _max_transition_history
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_memory.py:32

   Description:
     Shared int '_max_transition_history' in class 'StateMemory'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 218: write

   Suggestion:
     Add lock protection for writes to '_max_transition_history'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

588. [HIGH] last_accessed
   Type: datetime
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_metadata_tracker.py:20

   Description:
     Shared datetime 'last_accessed' in class 'StateMetadata'. has unprotected write operation. Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (1):
     - Line 70: write

   Suggestion:
     Add lock protection for writes to 'last_accessed'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

589. [HIGH] last_error
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_metadata_tracker.py:24

   Description:
     Shared unknown 'last_error' in class 'StateMetadata'. has unprotected write operation. Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (1):
     - Line 101: write

   Suggestion:
     Add lock protection for writes to 'last_error'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

590. [HIGH] min_confidence
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/state/state_text.py:37

   Description:
     Shared float 'min_confidence' in class 'StateText'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 118: write

   Suggestion:
     Add lock protection for writes to 'min_confidence'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

591. [HIGH] successful
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/enhanced_state_transition.py:46

   Description:
     Shared bool 'successful' in class 'TransitionResult'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 57: write

   Suggestion:
     Add lock protection for writes to 'successful'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

592. [HIGH] state_name
   Type: str
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/model/transition/state_transitions_joint_table.py:23

   Description:
     Shared str 'state_name' in class 'TransitionEntry'. has unprotected write operation. Locks available but not used: ['_lock', '_anonymous'].

   Access Locations (1):
     - Line 71: write

   Suggestion:
     Add lock protection for writes to 'state_name'. Even a single unprotected write can cause data corruption.

--------------------------------------------------------------------------------

593. [HIGH] min_confidence
   Type: float
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/processors/base.py:24

   Description:
     Shared float 'min_confidence' in class 'ProcessorConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 70: write

   Suggestion:
     Add lock protection for writes to 'min_confidence'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

594. [HIGH] enable_ocr
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/processors/base.py:27

   Description:
     Shared bool 'enable_ocr' in class 'ProcessorConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 82: write

   Suggestion:
     Add lock protection for writes to 'enable_ocr'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

595. [HIGH] detect_colors
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/processors/base.py:30

   Description:
     Shared bool 'detect_colors' in class 'ProcessorConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 94: write

   Suggestion:
     Add lock protection for writes to 'detect_colors'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

596. [HIGH] detect_shapes
   Type: bool
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/processors/base.py:33

   Description:
     Shared bool 'detect_shapes' in class 'ProcessorConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 106: write

   Suggestion:
     Add lock protection for writes to 'detect_shapes'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

597. [HIGH] model_name
   Type: unknown
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/processors/base.py:36

   Description:
     Shared unknown 'model_name' in class 'ProcessorConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 118: write

   Suggestion:
     Add lock protection for writes to 'model_name'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

598. [HIGH] max_objects
   Type: int
   Location: /mnt/c/Users/jspin/Documents/qontinui_parent/qontinui/src/qontinui/semantic/processors/base.py:39

   Description:
     Shared int 'max_objects' in class 'ProcessorConfig'. has unprotected write operation. No locking mechanism found.

   Access Locations (1):
     - Line 130: write

   Suggestion:
     Add lock protection for writes to 'max_objects'. Even a single unprotected write can cause data corruption.

   Note: Possible false positive indicators:
     - No threading imports or Thread creation found

--------------------------------------------------------------------------------

================================================================================
END OF REPORT
================================================================================